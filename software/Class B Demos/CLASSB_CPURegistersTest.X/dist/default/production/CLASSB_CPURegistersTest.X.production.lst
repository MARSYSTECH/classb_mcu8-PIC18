

Microchip Technology PIC18 PRO Macro Assembler V1.12 build 49521 
                                                                                               Wed May 21 13:41:10 2014

HI-TECH Software Omniscient Code Generator (PRO mode) build 49521
     1                           	processor	18F87K90
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    12  0000                     Reg_save:
    13  0000                     	ds	8	;# 
    14  0000                     
    15 ;;
    16 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    17 ;;
    18 ;; *************** function _main *****************
    19 ;; Defined at:
    20 ;;		line 148 in file "main.c"
    21 ;; Parameters:    Size  Location     Type
    22 ;;		None
    23 ;; Auto vars:     Size  Location     Type
    24 ;;  testResult      1    0[COMRAM] volatile unsigned char 
    25 ;; Return value:  Size  Location     Type
    26 ;;		None               void
    27 ;; Registers used:
    28 ;;		wreg, status,2, cstack
    29 ;; Tracked objects:
    30 ;;		On entry : 0/0
    31 ;;		On exit  : 0/0
    32 ;;		Unchanged: 0/0
    33 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
    34 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    35 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    36 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    37 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    38 ;;Total ram usage:        1 bytes
    39 ;; Hardware stack levels required when called:    1
    40 ;; This function calls:
    41 ;;		_CLASSB_CPURegistersTest
    42 ;; This function is called by:
    43 ;;		Startup code after reset
    44 ;; This function uses a non-reentrant model
    45 ;;
    46                           
    47                           	psect	text0
    48  01FDFE                     __ptext0:
    49                           	opt stack 0
    50                           
    51                           ; #config settings
    52  01FDFE                     _main:
    53                           	opt stack 30
    54                           
    55                           ;main.c: 149: volatile uint8_t testResult = 0;
    56  01FDFE  6A01               	clrf	main@testResult,c	;volatile
    57                           
    58                           ;main.c: 151: testResult = CLASSB_CPURegistersTest();
    59  01FE00  EC07  F0FF         	call	_CLASSB_CPURegistersTest	;wreg free
    60  01FE04  6E01               	movwf	main@testResult,c	;volatile
    61                           
    62                           ;main.c: 153: if (testResult == 0x00)
    63  01FE06  6601               	tstfsz	main@testResult,c	;volatile
    64  01FE08  D000               	goto	l5
    65  01FE0A                     l5:
    66  01FE0A  F000               	nop		;# 
    67  01FE0C                     l7:
    68  01FE0C  D7FF               	goto	l7
    69                           
    70                           	psect	cinit
    71  01FDF8                     __pcinit:
    72                           	opt stack 0
    73  01FDF8                     start_initialization:
    74                           	opt stack 0
    75  01FDF8                     __initialization:
    76                           	opt stack 0
    77  01FDF8                     end_of_initialization:
    78                           	opt stack 0
    79  01FDF8                     __end_of__initialization:
    80                           	opt stack 0
    81  01FDF8  0100               	movlb	0
    82  01FDFA  EFFF  F0FE         	goto	_main	;jump to C main() function
    83                           
    84                           	psect	cstackCOMRAM
    85  000001                     __pcstackCOMRAM:
    86                           	opt stack 0
    87  000001                     main@testResult:
    88                           	opt stack 0
    89                           
    90                           ; 1 bytes @ 0x0
    91  000001                     	ds	1
    92                           
    93 ;; *************** function _CLASSB_CPURegistersTest *****************
    94 ;; Defined at:
    95 ;;		line 73 in file "CLASSB_CPURegistersTest.c"
    96 ;; Parameters:    Size  Location     Type
    97 ;;		None
    98 ;; Auto vars:     Size  Location     Type
    99 ;;		None
   100 ;; Return value:  Size  Location     Type
   101 ;;                  1    wreg      enum E11350
   102 ;; Registers used:
   103 ;;		wreg
   104 ;; Tracked objects:
   105 ;;		On entry : 0/0
   106 ;;		On exit  : 0/0
   107 ;;		Unchanged: 0/0
   108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   113 ;;Total ram usage:        0 bytes
   114 ;; Hardware stack levels used:    1
   115 ;; This function calls:
   116 ;;		Nothing
   117 ;; This function is called by:
   118 ;;		_main
   119 ;; This function uses a non-reentrant model
   120 ;;
   121                           
   122                           	psect	text1
   123  01FE0E                     __ptext1:
   124                           	opt stack 0
   125  01FE0E                     __end_of_main:
   126                           	opt stack 0
   127  01FE0E                     _CLASSB_CPURegistersTest:
   128                           	opt stack 30
   129  01FE0E  CFFC F000          	movff	stkptr,Reg_save	;# 
   130  01FE12  CFFD F001          	movff	tosl,Reg_save+1	;# 
   131  01FE16  CFFE F002          	movff	tosh,Reg_save+2	;# 
   132  01FE1A  CFFF F003          	movff	tosu,Reg_save+3	;# 
   133  01FE1E  CFF2 F004          	movff	intcon,Reg_save+4	;# 
   134  01FE22  CFF1 F005          	movff	intcon2,Reg_save+5	;# 
   135  01FE26  CFF0 F006          	movff	intcon3,Reg_save+6	;# 
   136  01FE2A  0EAA               	movlw	170	;# 
   137  01FE2C  08AA               	sublw	170	;# 
   138  01FE2E  E134               	bnz	ERR1	;# 
   139  01FE30  0E55               	movlw	85	;# 
   140  01FE32  0855               	sublw	85	;# 
   141  01FE34  E131               	bnz	ERR1	;# 
   142  01FE36  CFF6 F007          	movff	tblptrl,Reg_save+7	;# 
   143  01FE3A  0E55               	movlw	85	;# 
   144  01FE3C  6EF6               	movwf	tblptrl,c	;# 
   145  01FE3E  62F6               	cpfseq	tblptrl,c	;# 
   146  01FE40  D02B               	bra	ERR1	;# 
   147  01FE42  0EAA               	movlw	170	;# 
   148  01FE44  6EF6               	movwf	tblptrl,c	;# 
   149  01FE46  62F6               	cpfseq	tblptrl,c	;# 
   150  01FE48  D027               	bra	ERR1	;# 
   151  01FE4A  C007 FFF6          	movff	Reg_save+7,tblptrl	;# 
   152  01FE4E  CFF7 F007          	movff	tblptrh,Reg_save+7	;# 
   153  01FE52  0E55               	movlw	85	;# 
   154  01FE54  6EF7               	movwf	tblptrh,c	;# 
   155  01FE56  62F7               	cpfseq	tblptrh,c	;# 
   156  01FE58  D01F               	bra	ERR1	;# 
   157  01FE5A  0EAA               	movlw	170	;# 
   158  01FE5C  6EF7               	movwf	tblptrh,c	;# 
   159  01FE5E  62F7               	cpfseq	tblptrh,c	;# 
   160  01FE60  D01B               	bra	ERR1	;# 
   161  01FE62  C007 FFF7          	movff	Reg_save+7,tblptrh	;# 
   162  01FE66  CFF8 F007          	movff	tblptru,Reg_save+7	;# 
   163  01FE6A  0E15               	movlw	21	;# 
   164  01FE6C  6EF8               	movwf	tblptru,c	;# 
   165  01FE6E  62F8               	cpfseq	tblptru,c	;# 
   166  01FE70  D013               	bra	ERR1	;# 
   167  01FE72  0E2A               	movlw	42	;# 
   168  01FE74  6EF8               	movwf	tblptru,c	;# 
   169  01FE76  62F8               	cpfseq	tblptru,c	;# 
   170  01FE78  D00F               	bra	ERR1	;# 
   171  01FE7A  C007 FFF8          	movff	Reg_save+7,tblptru	;# 
   172  01FE7E  CFF5 F007          	movff	tablat,Reg_save+7	;# 
   173  01FE82  0E55               	movlw	85	;# 
   174  01FE84  6EF5               	movwf	tablat,c	;# 
   175  01FE86  62F5               	cpfseq	tablat,c	;# 
   176  01FE88  D007               	bra	ERR1	;# 
   177  01FE8A  0EAA               	movlw	170	;# 
   178  01FE8C  6EF5               	movwf	tablat,c	;# 
   179  01FE8E  62F5               	cpfseq	tablat,c	;# 
   180  01FE90  D003               	bra	ERR1	;# 
   181  01FE92  C007 FFF5          	movff	Reg_save+7,tablat	;# 
   182  01FE96  D010               	bra	SKIP	;# 
   183  01FE98                     ERR1:
   184                           
   185                           ;# 
   186  01FE98  C000 FFFC          	movff	Reg_save,stkptr	;# 
   187  01FE9C  5001               	movf	Reg_save+1,w,c	;# 
   188  01FE9E  6EFD               	movwf	tosl,c	;# 
   189  01FEA0  5002               	movf	Reg_save+2,w,c	;# 
   190  01FEA2  6EFE               	movwf	tosh,c	;# 
   191  01FEA4  5003               	movf	Reg_save+3,w,c	;# 
   192  01FEA6  6EFF               	movwf	tosu,c	;# 
   193  01FEA8  C004 FFF2          	movff	Reg_save+4,intcon	;# 
   194  01FEAC  C005 FFF1          	movff	Reg_save+5,intcon2	;# 
   195  01FEB0  C006 FFF0          	movff	Reg_save+6,intcon3	;# 
   196  01FEB4  0C01               	retlw	1	;# 
   197  01FEB6                     
   198                           ;# 
   199  01FEB6  F000               	nop		; ;# 
   200  01FEB8                     SKIP:
   201                           
   202                           ;# 
   203  01FEB8  CFF4 F007          	movff	prodh,Reg_save+7	;# 
   204  01FEBC  0E55               	movlw	85	;# 
   205  01FEBE  6EF4               	movwf	prodh,c	;# 
   206  01FEC0  62F4               	cpfseq	prodh,c	;# 
   207  01FEC2  D7EA               	bra	ERR1	;# 
   208  01FEC4  0EAA               	movlw	170	;# 
   209  01FEC6  6EF4               	movwf	prodh,c	;# 
   210  01FEC8  62F4               	cpfseq	prodh,c	;# 
   211  01FECA  D7E6               	bra	ERR1	;# 
   212  01FECC  C007 FFF4          	movff	Reg_save+7,prodh	;# 
   213  01FED0  CFF3 F007          	movff	prodl,Reg_save+7	;# 
   214  01FED4  0E55               	movlw	85	;# 
   215  01FED6  6EF3               	movwf	prodl,c	;# 
   216  01FED8  62F3               	cpfseq	prodl,c	;# 
   217  01FEDA  D7DE               	bra	ERR1	;# 
   218  01FEDC  0EAA               	movlw	170	;# 
   219  01FEDE  6EF3               	movwf	prodl,c	;# 
   220  01FEE0  62F3               	cpfseq	prodl,c	;# 
   221  01FEE2  D7DA               	bra	ERR1	;# 
   222  01FEE4  C007 FFF3          	movff	Reg_save+7,prodl	;# 
   223  01FEE8  CFE9 F007          	movff	fsr0l,Reg_save+7	;# 
   224  01FEEC  0E55               	movlw	85	;# 
   225  01FEEE  6EE9               	movwf	fsr0l,c	;# 
   226  01FEF0  62E9               	cpfseq	fsr0l,c	;# 
   227  01FEF2  D7D2               	bra	ERR1	;# 
   228  01FEF4  0EAA               	movlw	170	;# 
   229  01FEF6  6EE9               	movwf	fsr0l,c	;# 
   230  01FEF8  62E9               	cpfseq	fsr0l,c	;# 
   231  01FEFA  D7CE               	bra	ERR1	;# 
   232  01FEFC  C007 FFE9          	movff	Reg_save+7,fsr0l	;# 
   233  01FF00  CFEA F007          	movff	fsr0h,Reg_save+7	;# 
   234  01FF04  0E05               	movlw	5	;# 
   235  01FF06  6EEA               	movwf	fsr0h,c	;# 
   236  01FF08  62EA               	cpfseq	fsr0h,c	;# 
   237  01FF0A  D7C6               	bra	ERR1	;# 
   238  01FF0C  0E0A               	movlw	10	;# 
   239  01FF0E  6EEA               	movwf	fsr0h,c	;# 
   240  01FF10  62EA               	cpfseq	fsr0h,c	;# 
   241  01FF12  D7C2               	bra	ERR1	;# 
   242  01FF14  C007 FFEA          	movff	Reg_save+7,fsr0h	;# 
   243  01FF18  CFE1 F007          	movff	fsr1l,Reg_save+7	;# 
   244  01FF1C  0E55               	movlw	85	;# 
   245  01FF1E  6EE1               	movwf	fsr1l,c	;# 
   246  01FF20  62E1               	cpfseq	fsr1l,c	;# 
   247  01FF22  D7BA               	bra	ERR1	;# 
   248  01FF24  0EAA               	movlw	170	;# 
   249  01FF26  6EE1               	movwf	fsr1l,c	;# 
   250  01FF28  62E1               	cpfseq	fsr1l,c	;# 
   251  01FF2A  D7B6               	bra	ERR1	;# 
   252  01FF2C  C007 FFE1          	movff	Reg_save+7,fsr1l	;# 
   253  01FF30  CFE2 F007          	movff	fsr1h,Reg_save+7	;# 
   254  01FF34  0E05               	movlw	5	;# 
   255  01FF36  6EE2               	movwf	fsr1h,c	;# 
   256  01FF38  62E2               	cpfseq	fsr1h,c	;# 
   257  01FF3A  D7AE               	bra	ERR1	;# 
   258  01FF3C  0E0A               	movlw	10	;# 
   259  01FF3E  6EE2               	movwf	fsr1h,c	;# 
   260  01FF40  62E2               	cpfseq	fsr1h,c	;# 
   261  01FF42  D7AA               	bra	ERR1	;# 
   262  01FF44  C007 FFE2          	movff	Reg_save+7,fsr1h	;# 
   263  01FF48  CFD9 F007          	movff	fsr2l,Reg_save+7	;# 
   264  01FF4C  0E55               	movlw	85	;# 
   265  01FF4E  6ED9               	movwf	fsr2l,c	;# 
   266  01FF50  62D9               	cpfseq	fsr2l,c	;# 
   267  01FF52  D7A2               	bra	ERR1	;# 
   268  01FF54  0EAA               	movlw	170	;# 
   269  01FF56  6ED9               	movwf	fsr2l,c	;# 
   270  01FF58  62D9               	cpfseq	fsr2l,c	;# 
   271  01FF5A  D79E               	bra	ERR1	;# 
   272  01FF5C  C007 FFD9          	movff	Reg_save+7,fsr2l	;# 
   273  01FF60  CFDA F007          	movff	fsr2h,Reg_save+7	;# 
   274  01FF64  0E05               	movlw	5	;# 
   275  01FF66  6EDA               	movwf	fsr2h,c	;# 
   276  01FF68  62DA               	cpfseq	fsr2h,c	;# 
   277  01FF6A  D796               	bra	ERR1	;# 
   278  01FF6C  0E0A               	movlw	10	;# 
   279  01FF6E  6EDA               	movwf	fsr2h,c	;# 
   280  01FF70  62DA               	cpfseq	fsr2h,c	;# 
   281  01FF72  D792               	bra	ERR1	;# 
   282  01FF74  C007 FFDA          	movff	Reg_save+7,fsr2h	;# 
   283  01FF78  CFD0 F007          	movff	4048,Reg_save+7	;# 
   284  01FF7C  0E1D               	movlw	29	;# 
   285  01FF7E  6ED0               	movwf	4048,c	;# 
   286  01FF80  62D0               	cpfseq	4048,c	;# 
   287  01FF82  D78A               	bra	ERR1	;# 
   288  01FF84  0E8E               	movlw	142	;# 
   289  01FF86  6ED0               	movwf	4048,c	;# 
   290  01FF88  62D0               	cpfseq	4048,c	;# 
   291  01FF8A  D786               	bra	ERR1	;# 
   292  01FF8C  C007 FFD0          	movff	Reg_save+7,4048	;# 
   293  01FF90  9EF2               	bcf	intcon,7,c	;# 
   294  01FF92  0E15               	movlw	21	;# 
   295  01FF94  6ED8               	movwf	status,c	;# 
   296  01FF96  62D8               	cpfseq	status,c	;# 
   297  01FF98  D77F               	bra	ERR1	;# 
   298  01FF9A  0E0A               	movlw	10	;# 
   299  01FF9C  6ED8               	movwf	status,c	;# 
   300  01FF9E  62D8               	cpfseq	status,c	;# 
   301  01FFA0  D77B               	bra	ERR1	;# 
   302  01FFA2  0E15               	movlw	21	;# 
   303  01FFA4  6EFF               	movwf	tosu,c	;# 
   304  01FFA6  62FF               	cpfseq	tosu,c	;# 
   305  01FFA8  D777               	bra	ERR1	;# 
   306  01FFAA  0E0A               	movlw	10	;# 
   307  01FFAC  6EFF               	movwf	tosu,c	;# 
   308  01FFAE  62FF               	cpfseq	tosu,c	;# 
   309  01FFB0  D773               	bra	ERR1	;# 
   310  01FFB2  0E55               	movlw	85	;# 
   311  01FFB4  6EFE               	movwf	tosh,c	;# 
   312  01FFB6  62FE               	cpfseq	tosh,c	;# 
   313  01FFB8  D76F               	bra	ERR1	;# 
   314  01FFBA  0EAA               	movlw	170	;# 
   315  01FFBC  6EFE               	movwf	tosh,c	;# 
   316  01FFBE  62FE               	cpfseq	tosh,c	;# 
   317  01FFC0  D76B               	bra	ERR1	;# 
   318  01FFC2  0E55               	movlw	85	;# 
   319  01FFC4  6EFD               	movwf	tosl,c	;# 
   320  01FFC6  62FD               	cpfseq	tosl,c	;# 
   321  01FFC8  D767               	bra	ERR1	;# 
   322  01FFCA  0EAA               	movlw	170	;# 
   323  01FFCC  6EFD               	movwf	tosl,c	;# 
   324  01FFCE  62FD               	cpfseq	tosl,c	;# 
   325  01FFD0  D763               	bra	ERR1	;# 
   326  01FFD2  0E15               	movlw	21	;# 
   327  01FFD4  6EFC               	movwf	stkptr,c	;# 
   328  01FFD6  62FC               	cpfseq	stkptr,c	;# 
   329  01FFD8  D75F               	bra	ERR1	;# 
   330  01FFDA  0E0A               	movlw	10	;# 
   331  01FFDC  6EFC               	movwf	stkptr,c	;# 
   332  01FFDE  62FC               	cpfseq	stkptr,c	;# 
   333  01FFE0  D75B               	bra	ERR1	;# 
   334  01FFE2  C004 FFF2          	movff	Reg_save+4,intcon	;# 
   335  01FFE6  C005 FFF1          	movff	Reg_save+5,intcon2	;# 
   336  01FFEA  C006 FFF0          	movff	Reg_save+6,intcon3	;# 
   337  01FFEE  C000 FFFC          	movff	Reg_save,stkptr	;# 
   338  01FFF2  5001               	movf	Reg_save+1,w,c	;# 
   339  01FFF4  6EFD               	movwf	tosl,c	;# 
   340  01FFF6  5002               	movf	Reg_save+2,w,c	;# 
   341  01FFF8  6EFE               	movwf	tosh,c	;# 
   342  01FFFA  5003               	movf	Reg_save+3,w,c	;# 
   343  01FFFC  6EFF               	movwf	tosu,c	;# 
   344                           
   345                           ;CLASSB_CPURegistersTest.c: 431: return 0x00;
   346  01FFFE  0C00               	retlw	0
   347  020000                     __end_of_CLASSB_CPURegistersTest:
   348                           	opt stack 0
   349  0000                     tosu	equ	0xFFF
   350                           tosh	equ	0xFFE
   351                           tosl	equ	0xFFD
   352                           stkptr	equ	0xFFC
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           prodh	equ	0xFF4
   358                           prodl	equ	0xFF3
   359                           intcon	equ	0xFF2
   360                           intcon2	equ	0xFF1
   361                           intcon3	equ	0xFF0
   362                           fsr0h	equ	0xFEA
   363                           fsr0l	equ	0xFE9
   364                           fsr1h	equ	0xFE2
   365                           fsr1l	equ	0xFE1
   366                           fsr2h	equ	0xFDA
   367                           fsr2l	equ	0xFD9
   368                           status	equ	0xFD8
   369                           tosu	equ	0xFFF
   370                           tosh	equ	0xFFE
   371                           tosl	equ	0xFFD
   372                           stkptr	equ	0xFFC
   373                           tblptru	equ	0xFF8
   374                           tblptrh	equ	0xFF7
   375                           tblptrl	equ	0xFF6
   376                           tablat	equ	0xFF5
   377                           prodh	equ	0xFF4
   378                           prodl	equ	0xFF3
   379                           intcon	equ	0xFF2
   380                           intcon2	equ	0xFF1
   381                           intcon3	equ	0xFF0
   382                           fsr0h	equ	0xFEA
   383                           fsr0l	equ	0xFE9
   384                           fsr1h	equ	0xFE2
   385                           fsr1l	equ	0xFE1
   386                           fsr2h	equ	0xFDA
   387                           fsr2l	equ	0xFD9
   388                           status	equ	0xFD8
   389                           
   390                           	psect	text2
   391  000000                     __ptext2:
   392                           	opt stack 0
   393                           tosu	equ	0xFFF
   394                           tosh	equ	0xFFE
   395                           tosl	equ	0xFFD
   396                           stkptr	equ	0xFFC
   397                           tblptru	equ	0xFF8
   398                           tblptrh	equ	0xFF7
   399                           tblptrl	equ	0xFF6
   400                           tablat	equ	0xFF5
   401                           prodh	equ	0xFF4
   402                           prodl	equ	0xFF3
   403                           intcon	equ	0xFF2
   404                           intcon2	equ	0xFF1
   405                           intcon3	equ	0xFF0
   406                           fsr0h	equ	0xFEA
   407                           fsr0l	equ	0xFE9
   408                           fsr1h	equ	0xFE2
   409                           fsr1l	equ	0xFE1
   410                           fsr2h	equ	0xFDA
   411                           fsr2l	equ	0xFD9
   412                           status	equ	0xFD8
   413                           
   414                           	psect	rparam
   415  0000                     tosu	equ	0xFFF
   416                           tosh	equ	0xFFE
   417                           tosl	equ	0xFFD
   418                           stkptr	equ	0xFFC
   419                           tblptru	equ	0xFF8
   420                           tblptrh	equ	0xFF7
   421                           tblptrl	equ	0xFF6
   422                           tablat	equ	0xFF5
   423                           prodh	equ	0xFF4
   424                           prodl	equ	0xFF3
   425                           intcon	equ	0xFF2
   426                           intcon2	equ	0xFF1
   427                           intcon3	equ	0xFF0
   428                           fsr0h	equ	0xFEA
   429                           fsr0l	equ	0xFE9
   430                           fsr1h	equ	0xFE2
   431                           fsr1l	equ	0xFE1
   432                           fsr2h	equ	0xFDA
   433                           fsr2l	equ	0xFD9
   434                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      1       1
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              0 COMRAM     1     1      0
            _CLASSB_CPURegistersTest
 ---------------------------------------------------------------------------------
 (1) _CLASSB_CPURegistersTest                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CLASSB_CPURegistersTest

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      1       1       1        1.1%
STACK                0      0       1       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           F4      0       0      33        0.0%
BANK14              F4      0       0      34        0.0%
BIGRAM             EF3      0       0      35        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.12 build 49521 
Symbol Table                                                                                   Wed May 21 13:41:10 2014

                               l5 FE0A                                 l7 FE0C  
                     __CFG_BORV$3 000000                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                      __CFG_CP2$OFF 000000  
                    __CFG_CP3$OFF 000000                      __CFG_CP4$OFF 000000  
                    __CFG_CP5$OFF 000000                      __CFG_CP6$OFF 000000  
                    __CFG_CP7$OFF 000000                               ERR1 FE98  
                             RCON 000FD0                               SKIP FEB8  
                             VOID FEB6                               TOSH 000FFE  
                             TOSL 000FFD                               TOSU 000FFF  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
                            FSR0H 000FEA                              FSR1H 000FE2  
                            FSR0L 000FE9                              FSR2H 000FDA  
                            FSR1L 000FE1                              FSR2L 000FD9  
                            PRODH 000FF4                              PRODL 000FF3  
                            _main FDFE                              start 0000  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                           INTCON 000FF2                             TABLAT 000FF5  
                   __CFG_RETEN$ON 000000                             STATUS 000FD8  
                           ?_main 0001                             STKPTR 000FFC  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
                   __CFG_WRT2$OFF 000000                     __CFG_WRT3$OFF 000000  
                   __CFG_WRT4$OFF 000000                    __CFG_EBRT0$OFF 000000  
                   __CFG_WRT5$OFF 000000                    __CFG_EBRT1$OFF 000000  
                   __CFG_WRT6$OFF 000000                    __CFG_EBRT2$OFF 000000  
                   __CFG_WRT7$OFF 000000                    __CFG_EBRT3$OFF 000000  
                  __CFG_EBRT4$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBRT5$OFF 000000                    __CFG_EBRT6$OFF 000000  
                  __CFG_EBRT7$OFF 000000                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBRTB$OFF 000000                       INTCON2_Save 0005  
                     INTCON3_Save 0006          ?_CLASSB_CPURegistersTest 0001  
                 __initialization FDF8                      __end_of_main FE0E  
                          ??_main 0001                     __activetblptr 000000  
                          INTCON2 000FF1                            INTCON3 000FF0  
                          TBLPTRH 000FF7                            TBLPTRL 000FF6  
                          TBLPTRU 000FF8                   __CFG_BBSIZ$BB2K 000000  
                  __CFG_WDTEN$OFF 000000                    __CFG_XINST$OFF 000000  
                  __CFG_STVREN$ON 000000   __end_of_CLASSB_CPURegistersTest 0000  
                      __accesstop 0060           __end_of__initialization FDF8  
                  __pcstackCOMRAM 0001                   __CFG_PLLCFG$OFF 000000  
                         SFR_Save 0007                           Reg_save 0000  
                 __CFG_PWRTEN$OFF 000000                           __Hparam 0000  
                         __Lparam 0000                           __pcinit FDF8  
                         __ramtop 0F00                           __ptext0 FDFE  
                         __ptext1 FE0E                           __ptext2 0000  
__size_of_CLASSB_CPURegistersTest 01F2                 __CFG_MSSPMSK$MSK7 000000  
            end_of_initialization FDF8                    main@testResult 0001  
                __CFG_FOSC$INTIO2 000000                 __CFG_SOSCSEL$HIGH 000000  
             start_initialization FDF8                        INTCON_Save 0004  
         _CLASSB_CPURegistersTest FE0E                 __CFG_CCP2MX$PORTC 000000  
                        TOSH_Save 0002                          TOSL_Save 0001  
                        TOSU_Save 0003         ??_CLASSB_CPURegistersTest 0001  
               __CFG_ECCPMX$PORTE 000000                        STKPTR_Save 0000  
                        __Hrparam 0000                          __Lrparam 0000  
              __CFG_BOREN$SBORDIS 000000                     __size_of_main 0010  
             __CFG_RTCOSC$SOSCREF 000000               __CFG_INTOSCSEL$HIGH 000000  
              __CFG_WDTPS$1048576 000000               __CFG_BORPWR$ZPBORMV 000000  
