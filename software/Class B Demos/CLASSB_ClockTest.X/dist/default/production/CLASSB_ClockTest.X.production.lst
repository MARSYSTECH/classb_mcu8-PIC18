

Microchip Technology PIC18 PRO Macro Assembler V1.20 build 52243 
                                                                                               Mon Aug 04 13:13:27 2014

Microchip Technology Omniscient Code Generator (PRO mode) build 52243
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18  0000                     _TMR1	set	4046
    19  0000                     _ANSELA	set	3896
    20  0000                     _ANSELB	set	3897
    21  0000                     _ANSELC	set	3898
    22  0000                     _INTCON	set	4082
    23  0000                     _LATA	set	3977
    24  0000                     _LATB	set	3978
    25  0000                     _LATC	set	3979
    26  0000                     _OSCCON	set	4051
    27  0000                     _PIE1	set	3997
    28  0000                     _T1CON	set	4045
    29  0000                     _TRISA	set	3986
    30  0000                     _TRISB	set	3987
    31  0000                     _TRISC	set	3988
    32  0000                     _LATA0	set	31816
    33  0000                     _LATA1	set	31817
    34  0000                     _TMR1IE	set	31976
    35  0000                     _TMR1IF	set	31984
    36  0000                     _TMR1ON	set	32360
    37  0000                     _TRISC0	set	31904
    38  0000                     _TRISC1	set	31905
    39                           
    40 ;;
    41 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    42 ;;
    43 ;; *************** function _main *****************
    44 ;; Defined at:
    45 ;;		line 156 in file "main.c"
    46 ;; Parameters:    Size  Location     Type
    47 ;;		None
    48 ;; Auto vars:     Size  Location     Type
    49 ;;  referenceFre    4   64[COMRAM] unsigned long 
    50 ;;  clockFrequen    4    0        unsigned long 
    51 ;;  i               2   71[COMRAM] unsigned int 
    52 ;;  msec            2   68[COMRAM] unsigned int 
    53 ;;  tolerance       1   70[COMRAM] unsigned char 
    54 ;; Return value:  Size  Location     Type
    55 ;;		None               void
    56 ;; Registers used:
    57 ;;		wreg, status,2, status,0, cstack
    58 ;; Tracked objects:
    59 ;;		On entry : 0/0
    60 ;;		On exit  : 0/0
    61 ;;		Unchanged: 0/0
    62 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
    63 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    64 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    65 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    66 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    67 ;;Total ram usage:       13 bytes
    68 ;; Hardware stack levels required when called:    2
    69 ;; This function calls:
    70 ;;		_CLASSB_ClockTest
    71 ;;		_Init
    72 ;; This function is called by:
    73 ;;		Startup code after reset
    74 ;; This function uses a non-reentrant model
    75 ;;
    76                           
    77                           	psect	text0
    78  00FD3E                     __ptext0:
    79                           	opt stack 0
    80                           
    81                           ; #config settings
    82  00FD3E                     _main:
    83                           	opt stack 29
    84                           
    85                           ;main.c: 157: Init();
    86                           
    87                           ; BSR set to: 15
    88                           ;incstack = 0
    89                           ;incstack = 0
    90  00FD3E  EC30  F07E         	call	_Init	;wreg free
    91                           
    92                           ; BSR set to: 15
    93                           ;main.c: 158: uint16_t i;
    94                           ;main.c: 159: for (i = 10000; i > 0; i--){
    95  00FD42  0E27               	movlw	39
    96  00FD44  6E49               	movwf	main@i+1,c
    97  00FD46  0E10               	movlw	16
    98  00FD48  6E48               	movwf	main@i,c
    99  00FD4A                     l95:
   100  00FD4A  F000               	nop		;# 
   101  00FD4C  0648               	decf	main@i,f,c
   102  00FD4E  A0D8               	btfss	status,0,c
   103  00FD50  0649               	decf	main@i+1,f,c
   104  00FD52  5049               	movf	main@i+1,w,c
   105  00FD54  1048               	iorwf	main@i,w,c
   106  00FD56  E1F9               	bnz	l95
   107                           
   108                           ;main.c: 162: TMR1ON = 1;
   109  00FD58  80CD               	bsf	4045,0,c	;volatile
   110                           
   111                           ;main.c: 166: uint32_t referenceFrequency = 32768;
   112  00FD5A  6A41               	clrf	main@referenceFrequency,c
   113  00FD5C  0E80               	movlw	128
   114  00FD5E  6E42               	movwf	main@referenceFrequency+1,c
   115  00FD60  6A43               	clrf	main@referenceFrequency+2,c
   116  00FD62  6A44               	clrf	main@referenceFrequency+3,c
   117                           
   118                           ;main.c: 167: size_t msec = 20;
   119  00FD64  6A46               	clrf	main@msec+1,c
   120  00FD66  0E14               	movlw	20
   121  00FD68  6E45               	movwf	main@msec,c
   122                           
   123                           ;main.c: 168: uint8_t tolerance = 5;
   124  00FD6A  0E05               	movlw	5
   125  00FD6C  6E47               	movwf	main@tolerance,c
   126                           
   127                           ;main.c: 170: testResult = CLASSB_ClockTest(clockFrequency, referenceFrequency, msec, to
      +                          lerance);
   128  00FD6E  6A1A               	clrf	?_CLASSB_ClockTest,c
   129  00FD70  0E24               	movlw	36
   130  00FD72  6E1B               	movwf	?_CLASSB_ClockTest+1,c
   131  00FD74  0EF4               	movlw	244
   132  00FD76  6E1C               	movwf	?_CLASSB_ClockTest+2,c
   133  00FD78  6A1D               	clrf	?_CLASSB_ClockTest+3,c
   134  00FD7A  6A1E               	clrf	?_CLASSB_ClockTest+4,c
   135  00FD7C  0E80               	movlw	128
   136  00FD7E  6E1F               	movwf	?_CLASSB_ClockTest+5,c
   137  00FD80  6A20               	clrf	?_CLASSB_ClockTest+6,c
   138  00FD82  6A21               	clrf	?_CLASSB_ClockTest+7,c
   139  00FD84  6A23               	clrf	?_CLASSB_ClockTest+9,c
   140  00FD86  0E14               	movlw	20
   141  00FD88  6E22               	movwf	?_CLASSB_ClockTest+8,c
   142  00FD8A  0E05               	movlw	5
   143  00FD8C  6E24               	movwf	?_CLASSB_ClockTest+10,c
   144  00FD8E  EC0D  F07F         	call	_CLASSB_ClockTest	;wreg free
   145  00FD92  6E52               	movwf	_testResult,c	;volatile
   146                           
   147                           ;main.c: 172: if (testResult == CLASSB_TEST_PASS)
   148  00FD94  6652               	tstfsz	_testResult,c	;volatile
   149  00FD96  D003               	goto	l97
   150                           
   151                           ;main.c: 173: {
   152                           ;main.c: 174: LATA1 = 1;
   153  00FD98  8289               	bsf	3977,1,c	;volatile
   154  00FD9A  F000               	nop		;# 
   155  00FD9C                     l98:
   156  00FD9C  D7FF               	goto	l98
   157  00FD9E                     l97:
   158                           
   159                           ;main.c: 178: else
   160                           ;main.c: 179: {
   161                           ;main.c: 180: LATA0 = 1;
   162  00FD9E  8089               	bsf	3977,0,c	;volatile
   163  00FDA0  F000               	nop		;# 
   164  00FDA2                     l102:
   165  00FDA2  D7FF               	goto	l102
   166  00FDA4                     __end_of_main:
   167                           	opt stack 0
   168                           status	equ	0xFD8
   169                           
   170                           	psect	cinit
   171  00FC4E                     __pcinit:
   172                           	opt stack 0
   173  00FC4E                     start_initialization:
   174                           	opt stack 0
   175  00FC4E                     __initialization:
   176                           	opt stack 0
   177                           
   178                           ; Clear objects allocated to COMRAM (9 bytes)
   179  00FC4E  EE00  F04A         	lfsr	0,__pbssCOMRAM
   180  00FC52  0E09               	movlw	9
   181  00FC54                     clear_0:
   182  00FC54  6AEE               	clrf	postinc0,c
   183  00FC56  06E8               	decf	wreg,f,c
   184  00FC58  E1FD               	bnz	clear_0
   185  00FC5A                     end_of_initialization:
   186                           	opt stack 0
   187  00FC5A                     __end_of__initialization:
   188                           	opt stack 0
   189  00FC5A  0100               	movlb	0
   190  00FC5C  EF9F  F07E         	goto	_main	;jump to C main() function
   191                           postinc0	equ	0xFEE
   192                           wreg	equ	0xFE8
   193                           status	equ	0xFD8
   194                           
   195                           	psect	bssCOMRAM
   196  00004A                     __pbssCOMRAM:
   197                           	opt stack 0
   198  00004A                     _CLASSB_Clockcount:
   199                           	opt stack 0
   200  00004A                     	ds	2
   201  00004C                     _CLASSB_timerCount:
   202                           	opt stack 0
   203  00004C                     	ds	2
   204  00004E                     _CLASSB_INTCON_temp:
   205                           	opt stack 0
   206  00004E                     	ds	1
   207  00004F                     _CLASSB_PIE1_temp:
   208                           	opt stack 0
   209  00004F                     	ds	1
   210  000050                     _CLASSB_T1CON_temp:
   211                           	opt stack 0
   212  000050                     	ds	1
   213  000051                     _CLASSB_TRISC_temp:
   214                           	opt stack 0
   215  000051                     	ds	1
   216  000052                     _testResult:
   217                           	opt stack 0
   218  000052                     	ds	1
   219                           postinc0	equ	0xFEE
   220                           wreg	equ	0xFE8
   221                           status	equ	0xFD8
   222                           
   223                           	psect	cstackCOMRAM
   224  000001                     __pcstackCOMRAM:
   225                           	opt stack 0
   226  000001                     ?___lmul:
   227                           	opt stack 0
   228  000001                     ___lmul@multiplier:
   229                           	opt stack 0
   230                           
   231                           ; 4 bytes @ 0x0
   232  000001                     	ds	4
   233  000005                     ___lmul@multiplicand:
   234                           	opt stack 0
   235                           
   236                           ; 4 bytes @ 0x4
   237  000005                     	ds	4
   238  000009                     ___lmul@product:
   239                           	opt stack 0
   240                           
   241                           ; 4 bytes @ 0x8
   242  000009                     	ds	4
   243  00000D                     ?___lldiv:
   244                           	opt stack 0
   245  00000D                     ___lldiv@dividend:
   246                           	opt stack 0
   247                           
   248                           ; 4 bytes @ 0xC
   249  00000D                     	ds	4
   250  000011                     ___lldiv@divisor:
   251                           	opt stack 0
   252                           
   253                           ; 4 bytes @ 0x10
   254  000011                     	ds	4
   255  000015                     ___lldiv@quotient:
   256                           	opt stack 0
   257                           
   258                           ; 4 bytes @ 0x14
   259  000015                     	ds	4
   260  000019                     ___lldiv@counter:
   261                           	opt stack 0
   262                           
   263                           ; 1 bytes @ 0x18
   264  000019                     	ds	1
   265  00001A                     ?_CLASSB_ClockTest:
   266                           	opt stack 0
   267  00001A                     CLASSB_ClockTest@clockFrequency:
   268                           	opt stack 0
   269                           
   270                           ; 4 bytes @ 0x19
   271  00001A                     	ds	4
   272  00001E                     CLASSB_ClockTest@referenceFrequency:
   273                           	opt stack 0
   274                           
   275                           ; 4 bytes @ 0x1D
   276  00001E                     	ds	4
   277  000022                     CLASSB_ClockTest@msec:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0x21
   281  000022                     	ds	2
   282  000024                     CLASSB_ClockTest@tolerance:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0x23
   286  000024                     	ds	1
   287  000025                     ??_CLASSB_ClockTest:
   288                           
   289                           ; 0 bytes @ 0x24
   290  000025                     	ds	8
   291  00002D                     CLASSB_ClockTest@systemFreq:
   292                           	opt stack 0
   293                           
   294                           ; 4 bytes @ 0x2C
   295  00002D                     	ds	4
   296  000031                     _CLASSB_ClockTest$591:
   297                           	opt stack 0
   298                           
   299                           ; 4 bytes @ 0x30
   300  000031                     	ds	4
   301  000035                     CLASSB_ClockTest@Clock_toleranceCount:
   302                           	opt stack 0
   303                           
   304                           ; 4 bytes @ 0x34
   305  000035                     	ds	4
   306  000039                     CLASSB_ClockTest@Clock_expectedCount:
   307                           	opt stack 0
   308                           
   309                           ; 4 bytes @ 0x38
   310  000039                     	ds	4
   311  00003D                     
   312                           ; 0 bytes @ 0x3C
   313  00003D                     	ds	4
   314  000041                     main@referenceFrequency:
   315                           	opt stack 0
   316                           
   317                           ; 4 bytes @ 0x40
   318  000041                     	ds	4
   319  000045                     main@msec:
   320                           	opt stack 0
   321                           
   322                           ; 2 bytes @ 0x44
   323  000045                     	ds	2
   324  000047                     main@tolerance:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x46
   328  000047                     	ds	1
   329  000048                     main@i:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0x47
   333  000048                     	ds	2
   334                           postinc0	equ	0xFEE
   335                           wreg	equ	0xFE8
   336                           status	equ	0xFD8
   337                           
   338 ;; *************** function _Init *****************
   339 ;; Defined at:
   340 ;;		line 138 in file "main.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;		None
   345 ;; Return value:  Size  Location     Type
   346 ;;		None               void
   347 ;; Registers used:
   348 ;;		wreg, status,2
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : F/F
   352 ;;		Unchanged: FFFFFFF0/0
   353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   358 ;;Total ram usage:        0 bytes
   359 ;; Hardware stack levels used:    1
   360 ;; This function calls:
   361 ;;		Nothing
   362 ;; This function is called by:
   363 ;;		_main
   364 ;; This function uses a non-reentrant model
   365 ;;
   366                           
   367                           	psect	text1
   368  00FC60                     __ptext1:
   369                           	opt stack 0
   370  00FC60                     _Init:
   371                           	opt stack 30
   372                           
   373                           ;main.c: 139: OSCCON = 0b01110000;
   374                           
   375                           ;incstack = 0
   376                           ;incstack = 0
   377  00FC60  0E70               	movlw	112
   378  00FC62  6ED3               	movwf	4051,c	;volatile
   379                           
   380                           ;main.c: 140: TRISA = 0;
   381  00FC64  6A92               	clrf	3986,c	;volatile
   382                           
   383                           ;main.c: 141: TRISB = 0;
   384  00FC66  6A93               	clrf	3987,c	;volatile
   385                           
   386                           ;main.c: 142: TRISC = 0;
   387  00FC68  6A94               	clrf	3988,c	;volatile
   388                           
   389                           ;main.c: 144: ANSELA = 0;
   390  00FC6A  010F               	movlb	15	; () banked
   391  00FC6C  6B38               	clrf	56,b	;volatile
   392                           
   393                           ; BSR set to: 15
   394                           ;main.c: 145: ANSELB = 0;
   395  00FC6E  6B39               	clrf	57,b	;volatile
   396                           
   397                           ; BSR set to: 15
   398                           ;main.c: 146: ANSELC = 0;
   399  00FC70  6B3A               	clrf	58,b	;volatile
   400                           
   401                           ; BSR set to: 15
   402                           ;main.c: 148: LATA = 0;
   403  00FC72  6A89               	clrf	3977,c	;volatile
   404                           
   405                           ; BSR set to: 15
   406                           ;main.c: 149: LATB = 0;
   407  00FC74  6A8A               	clrf	3978,c	;volatile
   408                           
   409                           ; BSR set to: 15
   410                           ;main.c: 150: LATC = 0;
   411  00FC76  6A8B               	clrf	3979,c	;volatile
   412                           
   413                           ;main.c: 152: T1CON = 0b10001000;
   414  00FC78  0E88               	movlw	136
   415  00FC7A  6ECD               	movwf	4045,c	;volatile
   416                           
   417                           ; BSR set to: 15
   418  00FC7C  0C88               	retlw	136
   419  00FC7E                     __end_of_Init:
   420                           	opt stack 0
   421                           postinc0	equ	0xFEE
   422                           wreg	equ	0xFE8
   423                           status	equ	0xFD8
   424                           
   425 ;; *************** function _CLASSB_ClockTest *****************
   426 ;; Defined at:
   427 ;;		line 70 in file "CLASSB_ClockTest.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;  clockFrequen    4   25[COMRAM] unsigned long 
   430 ;;  referenceFre    4   29[COMRAM] unsigned long 
   431 ;;  msec            2   33[COMRAM] unsigned int 
   432 ;;  tolerance       1   35[COMRAM] unsigned char 
   433 ;; Auto vars:     Size  Location     Type
   434 ;;  Clock_expect    4   56[COMRAM] unsigned long 
   435 ;;  Clock_tolera    4   52[COMRAM] unsigned long 
   436 ;;  systemFreq      4   44[COMRAM] unsigned long 
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      enum E8632
   439 ;; Registers used:
   440 ;;		wreg, status,2, status,0, cstack
   441 ;; Tracked objects:
   442 ;;		On entry : 0/F
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   446 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   447 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   449 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   450 ;;Total ram usage:       35 bytes
   451 ;; Hardware stack levels used:    1
   452 ;; Hardware stack levels required when called:    1
   453 ;; This function calls:
   454 ;;		_CLASSB_ClockTestSetup
   455 ;;		_CLASSB_ClockTestTimer
   456 ;;		_CLASSB_ClockTestRestore
   457 ;;		___lmul
   458 ;;		___lldiv
   459 ;; This function is called by:
   460 ;;		_main
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           	psect	text2
   465  00FE1A                     __ptext2:
   466                           	opt stack 0
   467  00FE1A                     _CLASSB_ClockTest:
   468                           	opt stack 29
   469                           
   470                           ;CLASSB_ClockTest.c: 71: uint32_t Clock_expectedCount;
   471                           ;CLASSB_ClockTest.c: 72: uint32_t Clock_toleranceCount;
   472                           ;CLASSB_ClockTest.c: 73: uint32_t systemFreq = clockFrequency/4;
   473                           
   474                           ; BSR set to: 15
   475                           ;incstack = 0
   476                           ;incstack = 0
   477  00FE1A  C01A  F025         	movff	CLASSB_ClockTest@clockFrequency,??_CLASSB_ClockTest
   478  00FE1E  C01B  F026         	movff	CLASSB_ClockTest@clockFrequency+1,??_CLASSB_ClockTest+1
   479  00FE22  C01C  F027         	movff	CLASSB_ClockTest@clockFrequency+2,??_CLASSB_ClockTest+2
   480  00FE26  C01D  F028         	movff	CLASSB_ClockTest@clockFrequency+3,??_CLASSB_ClockTest+3
   481  00FE2A  0E03               	movlw	3
   482  00FE2C  D005               	goto	u70
   483  00FE2E                     u75:
   484  00FE2E  90D8               	bcf	status,0,c
   485  00FE30  3228               	rrcf	??_CLASSB_ClockTest+3,f,c
   486  00FE32  3227               	rrcf	??_CLASSB_ClockTest+2,f,c
   487  00FE34  3226               	rrcf	??_CLASSB_ClockTest+1,f,c
   488  00FE36  3225               	rrcf	??_CLASSB_ClockTest,f,c
   489  00FE38                     u70:
   490  00FE38  2EE8               	decfsz	wreg,f,c
   491  00FE3A  D7F9               	goto	u75
   492  00FE3C  C028  F030         	movff	??_CLASSB_ClockTest+3,CLASSB_ClockTest@systemFreq+3
   493  00FE40  C027  F02F         	movff	??_CLASSB_ClockTest+2,CLASSB_ClockTest@systemFreq+2
   494  00FE44  C026  F02E         	movff	??_CLASSB_ClockTest+1,CLASSB_ClockTest@systemFreq+1
   495  00FE48  C025  F02D         	movff	??_CLASSB_ClockTest,CLASSB_ClockTest@systemFreq
   496                           
   497                           ;CLASSB_ClockTest.c: 76: CLASSB_ClockTestSetup();
   498  00FE4C  EC3F  F07E         	call	_CLASSB_ClockTestSetup	;wreg free
   499                           
   500                           ;CLASSB_ClockTest.c: 78: CLASSB_timerCount = ((uint32_t)msec*referenceFrequency)/1000;
   501  00FE50  C01E  F005         	movff	CLASSB_ClockTest@referenceFrequency,?___lmul+4
   502  00FE54  C01F  F006         	movff	CLASSB_ClockTest@referenceFrequency+1,?___lmul+5
   503  00FE58  C020  F007         	movff	CLASSB_ClockTest@referenceFrequency+2,?___lmul+6
   504  00FE5C  C021  F008         	movff	CLASSB_ClockTest@referenceFrequency+3,?___lmul+7
   505  00FE60  C022  F001         	movff	CLASSB_ClockTest@msec,?___lmul
   506  00FE64  C023  F002         	movff	CLASSB_ClockTest@msec+1,?___lmul+1
   507  00FE68  6A03               	clrf	?___lmul+2,c
   508  00FE6A  6A04               	clrf	?___lmul+3,c
   509  00FE6C  EC79  F07E         	call	___lmul	;wreg free
   510  00FE70  C004  F010         	movff	?___lmul+3,?___lldiv+3
   511  00FE74  C003  F00F         	movff	?___lmul+2,?___lldiv+2
   512  00FE78  C002  F00E         	movff	?___lmul+1,?___lldiv+1
   513  00FE7C  C001  F00D         	movff	?___lmul,?___lldiv
   514  00FE80  0EE8               	movlw	232
   515  00FE82  6E11               	movwf	?___lldiv+4,c
   516  00FE84  0E03               	movlw	3
   517  00FE86  6E12               	movwf	?___lldiv+5,c
   518  00FE88  0E00               	movlw	0
   519  00FE8A  6A13               	clrf	?___lldiv+6,c
   520  00FE8C  6A14               	clrf	?___lldiv+7,c
   521  00FE8E  ECD2  F07E         	call	___lldiv	;wreg free
   522  00FE92  C00D  F04C         	movff	?___lldiv,_CLASSB_timerCount
   523  00FE96  C00E  F04D         	movff	?___lldiv+1,_CLASSB_timerCount+1
   524                           
   525                           ;CLASSB_ClockTest.c: 80: if(CLASSB_timerCount == 0)
   526  00FE9A  504D               	movf	_CLASSB_timerCount+1,w,c
   527  00FE9C  104C               	iorwf	_CLASSB_timerCount,w,c
   528  00FE9E  E103               	bnz	l853
   529                           
   530                           ;CLASSB_ClockTest.c: 81: {
   531                           ;CLASSB_ClockTest.c: 82: CLASSB_timerCount = 1;
   532  00FEA0  6A4D               	clrf	_CLASSB_timerCount+1,c
   533  00FEA2  0E01               	movlw	1
   534  00FEA4  6E4C               	movwf	_CLASSB_timerCount,c
   535  00FEA6                     l853:
   536                           
   537                           ;CLASSB_ClockTest.c: 87: Clock_expectedCount = (uint16_t)(((systemFreq*msec)/1000)/15);
   538  00FEA6  0EE8               	movlw	232
   539  00FEA8  6E11               	movwf	?___lldiv+4,c
   540  00FEAA  0E03               	movlw	3
   541  00FEAC  6E12               	movwf	?___lldiv+5,c
   542  00FEAE  0E00               	movlw	0
   543  00FEB0  6A13               	clrf	?___lldiv+6,c
   544  00FEB2  6A14               	clrf	?___lldiv+7,c
   545  00FEB4  C02D  F005         	movff	CLASSB_ClockTest@systemFreq,?___lmul+4
   546  00FEB8  C02E  F006         	movff	CLASSB_ClockTest@systemFreq+1,?___lmul+5
   547  00FEBC  C02F  F007         	movff	CLASSB_ClockTest@systemFreq+2,?___lmul+6
   548  00FEC0  C030  F008         	movff	CLASSB_ClockTest@systemFreq+3,?___lmul+7
   549  00FEC4  C022  F001         	movff	CLASSB_ClockTest@msec,?___lmul
   550  00FEC8  C023  F002         	movff	CLASSB_ClockTest@msec+1,?___lmul+1
   551  00FECC  6A03               	clrf	?___lmul+2,c
   552  00FECE  6A04               	clrf	?___lmul+3,c
   553  00FED0  EC79  F07E         	call	___lmul	;wreg free
   554  00FED4  C004  F010         	movff	?___lmul+3,?___lldiv+3
   555  00FED8  C003  F00F         	movff	?___lmul+2,?___lldiv+2
   556  00FEDC  C002  F00E         	movff	?___lmul+1,?___lldiv+1
   557  00FEE0  C001  F00D         	movff	?___lmul,?___lldiv
   558  00FEE4  ECD2  F07E         	call	___lldiv	;wreg free
   559  00FEE8  C010  F034         	movff	?___lldiv+3,_CLASSB_ClockTest$591+3
   560  00FEEC  C00F  F033         	movff	?___lldiv+2,_CLASSB_ClockTest$591+2
   561  00FEF0  C00E  F032         	movff	?___lldiv+1,_CLASSB_ClockTest$591+1
   562  00FEF4  C00D  F031         	movff	?___lldiv,_CLASSB_ClockTest$591
   563                           
   564                           ;CLASSB_ClockTest.c: 87: Clock_expectedCount = (uint16_t)(((systemFreq*msec)/1000)/15);
   565  00FEF8  C031  F00D         	movff	_CLASSB_ClockTest$591,?___lldiv
   566  00FEFC  C032  F00E         	movff	_CLASSB_ClockTest$591+1,?___lldiv+1
   567  00FF00  C033  F00F         	movff	_CLASSB_ClockTest$591+2,?___lldiv+2
   568  00FF04  C034  F010         	movff	_CLASSB_ClockTest$591+3,?___lldiv+3
   569  00FF08  0E0F               	movlw	15
   570  00FF0A  6E11               	movwf	?___lldiv+4,c
   571  00FF0C  0E00               	movlw	0
   572  00FF0E  6A12               	clrf	?___lldiv+5,c
   573  00FF10  6A13               	clrf	?___lldiv+6,c
   574  00FF12  6A14               	clrf	?___lldiv+7,c
   575  00FF14  ECD2  F07E         	call	___lldiv	;wreg free
   576  00FF18  C00D  F039         	movff	?___lldiv,CLASSB_ClockTest@Clock_expectedCount
   577  00FF1C  C00E  F03A         	movff	?___lldiv+1,CLASSB_ClockTest@Clock_expectedCount+1
   578  00FF20  6A3B               	clrf	CLASSB_ClockTest@Clock_expectedCount+2,c
   579  00FF22  6A3C               	clrf	CLASSB_ClockTest@Clock_expectedCount+3,c
   580                           
   581                           ;CLASSB_ClockTest.c: 89: Clock_toleranceCount = ((Clock_expectedCount*tolerance)/100);
   582  00FF24  C039  F005         	movff	CLASSB_ClockTest@Clock_expectedCount,?___lmul+4
   583  00FF28  C03A  F006         	movff	CLASSB_ClockTest@Clock_expectedCount+1,?___lmul+5
   584  00FF2C  C03B  F007         	movff	CLASSB_ClockTest@Clock_expectedCount+2,?___lmul+6
   585  00FF30  C03C  F008         	movff	CLASSB_ClockTest@Clock_expectedCount+3,?___lmul+7
   586  00FF34  5024               	movf	CLASSB_ClockTest@tolerance,w,c
   587  00FF36  6E01               	movwf	?___lmul,c
   588  00FF38  6A02               	clrf	?___lmul+1,c
   589  00FF3A  6A03               	clrf	?___lmul+2,c
   590  00FF3C  6A04               	clrf	?___lmul+3,c
   591  00FF3E  EC79  F07E         	call	___lmul	;wreg free
   592  00FF42  C004  F010         	movff	?___lmul+3,?___lldiv+3
   593  00FF46  C003  F00F         	movff	?___lmul+2,?___lldiv+2
   594  00FF4A  C002  F00E         	movff	?___lmul+1,?___lldiv+1
   595  00FF4E  C001  F00D         	movff	?___lmul,?___lldiv
   596  00FF52  0E64               	movlw	100
   597  00FF54  6E11               	movwf	?___lldiv+4,c
   598  00FF56  0E00               	movlw	0
   599  00FF58  6A12               	clrf	?___lldiv+5,c
   600  00FF5A  6A13               	clrf	?___lldiv+6,c
   601  00FF5C  6A14               	clrf	?___lldiv+7,c
   602  00FF5E  ECD2  F07E         	call	___lldiv	;wreg free
   603  00FF62  C010  F038         	movff	?___lldiv+3,CLASSB_ClockTest@Clock_toleranceCount+3
   604  00FF66  C00F  F037         	movff	?___lldiv+2,CLASSB_ClockTest@Clock_toleranceCount+2
   605  00FF6A  C00E  F036         	movff	?___lldiv+1,CLASSB_ClockTest@Clock_toleranceCount+1
   606  00FF6E  C00D  F035         	movff	?___lldiv,CLASSB_ClockTest@Clock_toleranceCount
   607                           
   608                           ;CLASSB_ClockTest.c: 91: TMR1 = 0;
   609  00FF72  6ACE               	clrf	4046,c	;volatile
   610  00FF74  6ACF               	clrf	4047,c	;volatile
   611                           
   612                           ;CLASSB_ClockTest.c: 92: CLASSB_ClockTestTimer();
   613  00FF76  EC58  F07E         	call	_CLASSB_ClockTestTimer	;wreg free
   614                           
   615                           ;CLASSB_ClockTest.c: 94: TMR1ON = 0;
   616  00FF7A  90CD               	bcf	4045,0,c	;volatile
   617                           
   618                           ;CLASSB_ClockTest.c: 96: if(CLASSB_Clockcount == 0)
   619  00FF7C  504B               	movf	_CLASSB_Clockcount+1,w,c
   620  00FF7E  104A               	iorwf	_CLASSB_Clockcount,w,c
   621  00FF80  E103               	bnz	l875
   622                           
   623                           ;CLASSB_ClockTest.c: 97: {
   624                           ;CLASSB_ClockTest.c: 98: CLASSB_ClockTestRestore();
   625  00FF82  EC1E  F07E         	call	_CLASSB_ClockTestRestore	;wreg free
   626                           
   627                           ;CLASSB_ClockTest.c: 99: return CLASSB_TEST_TIMEOUT;
   628  00FF86  0C02               	retlw	2
   629  00FF88                     l875:
   630                           
   631                           ;CLASSB_ClockTest.c: 100: }
   632                           ;CLASSB_ClockTest.c: 102: if(CLASSB_Clockcount < (Clock_expectedCount - Clock_toleranceC
      +                          ount))
   633  00FF88  5035               	movf	CLASSB_ClockTest@Clock_toleranceCount,w,c
   634  00FF8A  5C39               	subwf	CLASSB_ClockTest@Clock_expectedCount,w,c
   635  00FF8C  6E25               	movwf	??_CLASSB_ClockTest& (0+255),c
   636  00FF8E  5036               	movf	CLASSB_ClockTest@Clock_toleranceCount+1,w,c
   637  00FF90  583A               	subwfb	CLASSB_ClockTest@Clock_expectedCount+1,w,c
   638  00FF92  6E26               	movwf	(??_CLASSB_ClockTest+1)& (0+255),c
   639  00FF94  5037               	movf	CLASSB_ClockTest@Clock_toleranceCount+2,w,c
   640  00FF96  583B               	subwfb	CLASSB_ClockTest@Clock_expectedCount+2,w,c
   641  00FF98  6E27               	movwf	(??_CLASSB_ClockTest+2)& (0+255),c
   642  00FF9A  5038               	movf	CLASSB_ClockTest@Clock_toleranceCount+3,w,c
   643  00FF9C  583C               	subwfb	CLASSB_ClockTest@Clock_expectedCount+3,w,c
   644  00FF9E  6E28               	movwf	(??_CLASSB_ClockTest+3)& (0+255),c
   645  00FFA0  504A               	movf	_CLASSB_Clockcount,w,c
   646  00FFA2  6E29               	movwf	(??_CLASSB_ClockTest+4)& (0+255),c
   647  00FFA4  504B               	movf	_CLASSB_Clockcount+1,w,c
   648  00FFA6  6E2A               	movwf	(??_CLASSB_ClockTest+5)& (0+255),c
   649  00FFA8  6A2B               	clrf	(??_CLASSB_ClockTest+6)& (0+255),c
   650  00FFAA  6A2C               	clrf	(??_CLASSB_ClockTest+7)& (0+255),c
   651  00FFAC  5025               	movf	??_CLASSB_ClockTest,w,c
   652  00FFAE  5C29               	subwf	??_CLASSB_ClockTest+4,w,c
   653  00FFB0  5026               	movf	??_CLASSB_ClockTest+1,w,c
   654  00FFB2  582A               	subwfb	??_CLASSB_ClockTest+5,w,c
   655  00FFB4  5027               	movf	??_CLASSB_ClockTest+2,w,c
   656  00FFB6  582B               	subwfb	??_CLASSB_ClockTest+6,w,c
   657  00FFB8  5028               	movf	??_CLASSB_ClockTest+3,w,c
   658  00FFBA  582C               	subwfb	??_CLASSB_ClockTest+7,w,c
   659  00FFBC  E203               	bc	l883
   660  00FFBE                     l877:
   661                           
   662                           ;CLASSB_ClockTest.c: 103: {
   663                           ;CLASSB_ClockTest.c: 104: CLASSB_ClockTestRestore();
   664  00FFBE  EC1E  F07E         	call	_CLASSB_ClockTestRestore	;wreg free
   665                           
   666                           ;CLASSB_ClockTest.c: 105: return CLASSB_TEST_FAIL;
   667  00FFC2  0C01               	retlw	1
   668  00FFC4                     l883:
   669                           
   670                           ;CLASSB_ClockTest.c: 106: }
   671                           ;CLASSB_ClockTest.c: 108: if(CLASSB_Clockcount > (Clock_expectedCount + Clock_toleranceC
      +                          ount))
   672  00FFC4  504A               	movf	_CLASSB_Clockcount,w,c
   673  00FFC6  6E25               	movwf	??_CLASSB_ClockTest& (0+255),c
   674  00FFC8  504B               	movf	_CLASSB_Clockcount+1,w,c
   675  00FFCA  6E26               	movwf	(??_CLASSB_ClockTest+1)& (0+255),c
   676  00FFCC  6A27               	clrf	(??_CLASSB_ClockTest+2)& (0+255),c
   677  00FFCE  6A28               	clrf	(??_CLASSB_ClockTest+3)& (0+255),c
   678  00FFD0  5035               	movf	CLASSB_ClockTest@Clock_toleranceCount,w,c
   679  00FFD2  2439               	addwf	CLASSB_ClockTest@Clock_expectedCount,w,c
   680  00FFD4  6E29               	movwf	(??_CLASSB_ClockTest+4)& (0+255),c
   681  00FFD6  5036               	movf	CLASSB_ClockTest@Clock_toleranceCount+1,w,c
   682  00FFD8  203A               	addwfc	CLASSB_ClockTest@Clock_expectedCount+1,w,c
   683  00FFDA  6E2A               	movwf	(??_CLASSB_ClockTest+5)& (0+255),c
   684  00FFDC  5037               	movf	CLASSB_ClockTest@Clock_toleranceCount+2,w,c
   685  00FFDE  203B               	addwfc	CLASSB_ClockTest@Clock_expectedCount+2,w,c
   686  00FFE0  6E2B               	movwf	(??_CLASSB_ClockTest+6)& (0+255),c
   687  00FFE2  5038               	movf	CLASSB_ClockTest@Clock_toleranceCount+3,w,c
   688  00FFE4  203C               	addwfc	CLASSB_ClockTest@Clock_expectedCount+3,w,c
   689  00FFE6  6E2C               	movwf	(??_CLASSB_ClockTest+7)& (0+255),c
   690  00FFE8  5025               	movf	??_CLASSB_ClockTest,w,c
   691  00FFEA  5C29               	subwf	??_CLASSB_ClockTest+4,w,c
   692  00FFEC  5026               	movf	??_CLASSB_ClockTest+1,w,c
   693  00FFEE  582A               	subwfb	??_CLASSB_ClockTest+5,w,c
   694  00FFF0  5027               	movf	??_CLASSB_ClockTest+2,w,c
   695  00FFF2  582B               	subwfb	??_CLASSB_ClockTest+6,w,c
   696  00FFF4  5028               	movf	??_CLASSB_ClockTest+3,w,c
   697  00FFF6  582C               	subwfb	??_CLASSB_ClockTest+7,w,c
   698  00FFF8  E3E2               	bnc	l877
   699                           
   700                           ;CLASSB_ClockTest.c: 112: }
   701                           ;CLASSB_ClockTest.c: 114: CLASSB_ClockTestRestore();
   702  00FFFA  EC1E  F07E         	call	_CLASSB_ClockTestRestore	;wreg free
   703                           
   704                           ;CLASSB_ClockTest.c: 115: return CLASSB_TEST_PASS;
   705  00FFFE  0C00               	retlw	0
   706  010000                     __end_of_CLASSB_ClockTest:
   707                           	opt stack 0
   708                           postinc0	equ	0xFEE
   709                           wreg	equ	0xFE8
   710                           status	equ	0xFD8
   711                           
   712 ;; *************** function ___lldiv *****************
   713 ;; Defined at:
   714 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lldiv.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;  dividend        4   12[COMRAM] unsigned long 
   717 ;;  divisor         4   16[COMRAM] unsigned long 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  quotient        4   20[COMRAM] unsigned long 
   720 ;;  counter         1   24[COMRAM] unsigned char 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  4   12[COMRAM] unsigned long 
   723 ;; Registers used:
   724 ;;		wreg, status,2, status,0
   725 ;; Tracked objects:
   726 ;;		On entry : 0/F
   727 ;;		On exit  : 0/F
   728 ;;		Unchanged: FFFFFFFF/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   730 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   731 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   733 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   734 ;;Total ram usage:       13 bytes
   735 ;; Hardware stack levels used:    1
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		_CLASSB_ClockTest
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text3
   744  00FDA4                     __ptext3:
   745                           	opt stack 0
   746  00FDA4                     ___lldiv:
   747                           	opt stack 29
   748                           
   749                           ;incstack = 0
   750                           ;incstack = 0
   751  00FDA4  6A15               	clrf	___lldiv@quotient,c
   752  00FDA6  6A16               	clrf	___lldiv@quotient+1,c
   753  00FDA8  6A17               	clrf	___lldiv@quotient+2,c
   754  00FDAA  6A18               	clrf	___lldiv@quotient+3,c
   755  00FDAC  5014               	movf	___lldiv@divisor+3,w,c
   756  00FDAE  1011               	iorwf	___lldiv@divisor,w,c
   757  00FDB0  1012               	iorwf	___lldiv@divisor+1,w,c
   758  00FDB2  1013               	iorwf	___lldiv@divisor+2,w,c
   759  00FDB4  E029               	bz	l542
   760  00FDB6  0E01               	movlw	1
   761  00FDB8  6E19               	movwf	___lldiv@counter,c
   762  00FDBA  D006               	goto	l829
   763  00FDBC                     l827:
   764  00FDBC  90D8               	bcf	status,0,c
   765  00FDBE  3611               	rlcf	___lldiv@divisor,f,c
   766  00FDC0  3612               	rlcf	___lldiv@divisor+1,f,c
   767  00FDC2  3613               	rlcf	___lldiv@divisor+2,f,c
   768  00FDC4  3614               	rlcf	___lldiv@divisor+3,f,c
   769  00FDC6  2A19               	incf	___lldiv@counter,f,c
   770  00FDC8                     l829:
   771  00FDC8  AE14               	btfss	___lldiv@divisor+3,7,c
   772  00FDCA  D7F8               	goto	l827
   773  00FDCC                     l831:
   774  00FDCC  90D8               	bcf	status,0,c
   775  00FDCE  3615               	rlcf	___lldiv@quotient,f,c
   776  00FDD0  3616               	rlcf	___lldiv@quotient+1,f,c
   777  00FDD2  3617               	rlcf	___lldiv@quotient+2,f,c
   778  00FDD4  3618               	rlcf	___lldiv@quotient+3,f,c
   779  00FDD6  5011               	movf	___lldiv@divisor,w,c
   780  00FDD8  5C0D               	subwf	___lldiv@dividend,w,c
   781  00FDDA  5012               	movf	___lldiv@divisor+1,w,c
   782  00FDDC  580E               	subwfb	___lldiv@dividend+1,w,c
   783  00FDDE  5013               	movf	___lldiv@divisor+2,w,c
   784  00FDE0  580F               	subwfb	___lldiv@dividend+2,w,c
   785  00FDE2  5014               	movf	___lldiv@divisor+3,w,c
   786  00FDE4  5810               	subwfb	___lldiv@dividend+3,w,c
   787  00FDE6  E309               	bnc	l839
   788  00FDE8  5011               	movf	___lldiv@divisor,w,c
   789  00FDEA  5E0D               	subwf	___lldiv@dividend,f,c
   790  00FDEC  5012               	movf	___lldiv@divisor+1,w,c
   791  00FDEE  5A0E               	subwfb	___lldiv@dividend+1,f,c
   792  00FDF0  5013               	movf	___lldiv@divisor+2,w,c
   793  00FDF2  5A0F               	subwfb	___lldiv@dividend+2,f,c
   794  00FDF4  5014               	movf	___lldiv@divisor+3,w,c
   795  00FDF6  5A10               	subwfb	___lldiv@dividend+3,f,c
   796  00FDF8  8015               	bsf	___lldiv@quotient,0,c
   797  00FDFA                     l839:
   798  00FDFA  90D8               	bcf	status,0,c
   799  00FDFC  3214               	rrcf	___lldiv@divisor+3,f,c
   800  00FDFE  3213               	rrcf	___lldiv@divisor+2,f,c
   801  00FE00  3212               	rrcf	___lldiv@divisor+1,f,c
   802  00FE02  3211               	rrcf	___lldiv@divisor,f,c
   803  00FE04  2E19               	decfsz	___lldiv@counter,f,c
   804  00FE06  D7E2               	goto	l831
   805  00FE08                     l542:
   806  00FE08  C015  F00D         	movff	___lldiv@quotient,?___lldiv
   807  00FE0C  C016  F00E         	movff	___lldiv@quotient+1,?___lldiv+1
   808  00FE10  C017  F00F         	movff	___lldiv@quotient+2,?___lldiv+2
   809  00FE14  C018  F010         	movff	___lldiv@quotient+3,?___lldiv+3
   810  00FE18  0012               	return	
   811  00FE1A                     __end_of___lldiv:
   812                           	opt stack 0
   813                           postinc0	equ	0xFEE
   814                           wreg	equ	0xFE8
   815                           status	equ	0xFD8
   816                           
   817 ;; *************** function ___lmul *****************
   818 ;; Defined at:
   819 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\lmul.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;  multiplier      4    0[COMRAM] unsigned long 
   822 ;;  multiplicand    4    4[COMRAM] unsigned long 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  product         4    8[COMRAM] unsigned long 
   825 ;; Return value:  Size  Location     Type
   826 ;;                  4    0[COMRAM] unsigned long 
   827 ;; Registers used:
   828 ;;		wreg, status,2, status,0
   829 ;; Tracked objects:
   830 ;;		On entry : 0/F
   831 ;;		On exit  : 0/F
   832 ;;		Unchanged: FFFFFFFF/0
   833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   834 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   838 ;;Total ram usage:       12 bytes
   839 ;; Hardware stack levels used:    1
   840 ;; This function calls:
   841 ;;		Nothing
   842 ;; This function is called by:
   843 ;;		_CLASSB_ClockTest
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text4
   848  00FCF2                     __ptext4:
   849                           	opt stack 0
   850  00FCF2                     ___lmul:
   851                           	opt stack 29
   852                           
   853                           ;incstack = 0
   854                           ;incstack = 0
   855  00FCF2  6A09               	clrf	___lmul@product,c
   856  00FCF4  6A0A               	clrf	___lmul@product+1,c
   857  00FCF6  6A0B               	clrf	___lmul@product+2,c
   858  00FCF8  6A0C               	clrf	___lmul@product+3,c
   859  00FCFA                     l575:
   860  00FCFA  A001               	btfss	___lmul@multiplier,0,c
   861  00FCFC  D008               	goto	l817
   862  00FCFE  5005               	movf	___lmul@multiplicand,w,c
   863  00FD00  2609               	addwf	___lmul@product,f,c
   864  00FD02  5006               	movf	___lmul@multiplicand+1,w,c
   865  00FD04  220A               	addwfc	___lmul@product+1,f,c
   866  00FD06  5007               	movf	___lmul@multiplicand+2,w,c
   867  00FD08  220B               	addwfc	___lmul@product+2,f,c
   868  00FD0A  5008               	movf	___lmul@multiplicand+3,w,c
   869  00FD0C  220C               	addwfc	___lmul@product+3,f,c
   870  00FD0E                     l817:
   871  00FD0E  90D8               	bcf	status,0,c
   872  00FD10  3605               	rlcf	___lmul@multiplicand,f,c
   873  00FD12  3606               	rlcf	___lmul@multiplicand+1,f,c
   874  00FD14  3607               	rlcf	___lmul@multiplicand+2,f,c
   875  00FD16  3608               	rlcf	___lmul@multiplicand+3,f,c
   876  00FD18  90D8               	bcf	status,0,c
   877  00FD1A  3204               	rrcf	___lmul@multiplier+3,f,c
   878  00FD1C  3203               	rrcf	___lmul@multiplier+2,f,c
   879  00FD1E  3202               	rrcf	___lmul@multiplier+1,f,c
   880  00FD20  3201               	rrcf	___lmul@multiplier,f,c
   881  00FD22  5004               	movf	___lmul@multiplier+3,w,c
   882  00FD24  1001               	iorwf	___lmul@multiplier,w,c
   883  00FD26  1002               	iorwf	___lmul@multiplier+1,w,c
   884  00FD28  1003               	iorwf	___lmul@multiplier+2,w,c
   885  00FD2A  E1E7               	bnz	l575
   886  00FD2C  C009  F001         	movff	___lmul@product,?___lmul
   887  00FD30  C00A  F002         	movff	___lmul@product+1,?___lmul+1
   888  00FD34  C00B  F003         	movff	___lmul@product+2,?___lmul+2
   889  00FD38  C00C  F004         	movff	___lmul@product+3,?___lmul+3
   890  00FD3C  0012               	return	
   891  00FD3E                     __end_of___lmul:
   892                           	opt stack 0
   893                           postinc0	equ	0xFEE
   894                           wreg	equ	0xFE8
   895                           status	equ	0xFD8
   896                           
   897 ;; *************** function _CLASSB_ClockTestRestore *****************
   898 ;; Defined at:
   899 ;;		line 186 in file "CLASSB_ClockTest.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;		None               void
   906 ;; Registers used:
   907 ;;		None
   908 ;; Tracked objects:
   909 ;;		On entry : 0/F
   910 ;;		On exit  : 0/F
   911 ;;		Unchanged: FFFFFFFF/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;Total ram usage:        0 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; This function calls:
   920 ;;		Nothing
   921 ;; This function is called by:
   922 ;;		_CLASSB_ClockTest
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text5
   927  00FC3C                     __ptext5:
   928                           	opt stack 0
   929  00FC3C                     _CLASSB_ClockTestRestore:
   930                           	opt stack 29
   931                           
   932                           ;CLASSB_ClockTest.c: 187: TRISC = CLASSB_TRISC_temp;
   933                           
   934                           ;incstack = 0
   935                           ;incstack = 0
   936  00FC3C  C051  FF94         	movff	_CLASSB_TRISC_temp,3988	;volatile
   937                           
   938                           ;CLASSB_ClockTest.c: 188: INTCON = CLASSB_INTCON_temp;
   939  00FC40  C04E  FFF2         	movff	_CLASSB_INTCON_temp,intcon	;volatile
   940                           
   941                           ;CLASSB_ClockTest.c: 189: T1CON = CLASSB_T1CON_temp;
   942  00FC44  C050  FFCD         	movff	_CLASSB_T1CON_temp,4045	;volatile
   943                           
   944                           ;CLASSB_ClockTest.c: 190: PIE1 = CLASSB_PIE1_temp;
   945  00FC48  C04F  FF9D         	movff	_CLASSB_PIE1_temp,3997	;volatile
   946  00FC4C  0012               	return	
   947  00FC4E                     __end_of_CLASSB_ClockTestRestore:
   948                           	opt stack 0
   949                           intcon	equ	0xFF2
   950                           postinc0	equ	0xFEE
   951                           wreg	equ	0xFE8
   952                           status	equ	0xFD8
   953                           
   954 ;; *************** function _CLASSB_ClockTestTimer *****************
   955 ;; Defined at:
   956 ;;		line 120 in file "CLASSB_ClockTest.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;		None               void
   963 ;; Registers used:
   964 ;;		None
   965 ;; Tracked objects:
   966 ;;		On entry : 0/F
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;Total ram usage:        0 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		_CLASSB_ClockTest
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text6
   984  00FCB0                     __ptext6:
   985                           	opt stack 0
   986  00FCB0                     _CLASSB_ClockTestTimer:
   987                           	opt stack 29
   988  00FCB0                     TimerTest:
   989                           
   990                           ;# 
   991  00FCB0  0100               	banksel	_CLASSB_timerCount	;# 
   992  00FCB2  514D               	movf	(_CLASSB_timerCount& (0+255)+1),w,b	;# 
   993  00FCB4  010F               	banksel	4047	;# 
   994  00FCB6  F000               	nop		;# 
   995  00FCB8  5CCF               	subwf	4047,w,c	;# 
   996  00FCBA  E113               	bnz	IncCounter	;# 
   997  00FCBC  F000               	nop		;# 
   998  00FCBE  F000               	nop		;# 
   999  00FCC0  F000               	nop		;# 
  1000  00FCC2  F000               	nop		;# 
  1001  00FCC4  F000               	nop		;# 
  1002  00FCC6  F000               	nop		;# 
  1003  00FCC8  F000               	nop		;# 
  1004  00FCCA  F000               	nop		;# 
  1005  00FCCC  F000               	nop		;# 
  1006  00FCCE  F000               	nop		;# 
  1007  00FCD0  F000               	nop		;# 
  1008  00FCD2  F000               	nop		;# 
  1009  00FCD4  F000               	nop		;# 
  1010  00FCD6  F000               	nop		;# 
  1011  00FCD8  0100               	banksel	_CLASSB_timerCount	;# 
  1012  00FCDA  514C               	movf	_CLASSB_timerCount& (0+255),w,b	;# 
  1013  00FCDC  010F               	banksel	4046	;# 
  1014  00FCDE  5CCE               	subwf	4046,w,c	;# 
  1015  00FCE0  E206               	bc	TimerTestEnd	;# 
  1016  00FCE2                     IncCounter:
  1017                           
  1018                           ;# 
  1019  00FCE2  0100               	banksel	_CLASSB_Clockcount	;# 
  1020  00FCE4  2B4A               	incf	_CLASSB_Clockcount& (0+255),f,b	;# 
  1021  00FCE6  B4D8               	btfsc	status,2,c	;# 
  1022  00FCE8  2B4B               	incf	(_CLASSB_Clockcount& (0+255)+1),f,b	;# 
  1023  00FCEA  EF58  F07E         	goto	TimerTest	;# 
  1024  00FCEE                     TimerTestEnd:
  1025                           
  1026                           ;# 
  1027  00FCEE  0012               	return		;# 
  1028  00FCF0  0012               	return	
  1029  00FCF2                     __end_of_CLASSB_ClockTestTimer:
  1030                           	opt stack 0
  1031                           intcon	equ	0xFF2
  1032                           postinc0	equ	0xFEE
  1033                           wreg	equ	0xFE8
  1034                           status	equ	0xFD8
  1035                           
  1036 ;; *************** function _CLASSB_ClockTestSetup *****************
  1037 ;; Defined at:
  1038 ;;		line 162 in file "CLASSB_ClockTest.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;		None               void
  1045 ;; Registers used:
  1046 ;;		wreg, status,2
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/F
  1049 ;;		On exit  : 0/F
  1050 ;;		Unchanged: FFFFFFFF/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;Total ram usage:        0 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_CLASSB_ClockTest
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text7
  1066  00FC7E                     __ptext7:
  1067                           	opt stack 0
  1068  00FC7E                     _CLASSB_ClockTestSetup:
  1069                           	opt stack 29
  1070                           
  1071                           ;CLASSB_ClockTest.c: 163: CLASSB_TRISC_temp = TRISC;
  1072                           
  1073                           ;incstack = 0
  1074                           ;incstack = 0
  1075  00FC7E  CF94 F051          	movff	3988,_CLASSB_TRISC_temp	;volatile
  1076                           
  1077                           ;CLASSB_ClockTest.c: 164: CLASSB_INTCON_temp = INTCON;
  1078  00FC82  CFF2 F04E          	movff	intcon,_CLASSB_INTCON_temp	;volatile
  1079                           
  1080                           ;CLASSB_ClockTest.c: 165: CLASSB_T1CON_temp = T1CON;
  1081  00FC86  CFCD F050          	movff	4045,_CLASSB_T1CON_temp	;volatile
  1082                           
  1083                           ;CLASSB_ClockTest.c: 166: CLASSB_PIE1_temp = PIE1;
  1084  00FC8A  CF9D F04F          	movff	3997,_CLASSB_PIE1_temp	;volatile
  1085                           
  1086                           ;CLASSB_ClockTest.c: 168: TRISC0 = 1;
  1087  00FC8E  8094               	bsf	3988,0,c	;volatile
  1088                           
  1089                           ;CLASSB_ClockTest.c: 169: TRISC1 = 1;
  1090  00FC90  8294               	bsf	3988,1,c	;volatile
  1091                           
  1092                           ;CLASSB_ClockTest.c: 170: INTCON = 0;
  1093  00FC92  6AF2               	clrf	intcon,c	;volatile
  1094                           
  1095                           ;CLASSB_ClockTest.c: 171: T1CON = 0b10001000;
  1096  00FC94  0E88               	movlw	136
  1097  00FC96  6ECD               	movwf	4045,c	;volatile
  1098                           
  1099                           ;CLASSB_ClockTest.c: 173: TMR1IF = 0;
  1100  00FC98  909E               	bcf	3998,0,c	;volatile
  1101                           
  1102                           ;CLASSB_ClockTest.c: 174: TMR1IE = 1;
  1103  00FC9A  809D               	bsf	3997,0,c	;volatile
  1104                           
  1105                           ;CLASSB_ClockTest.c: 176: TMR1 = 0xFE00;
  1106  00FC9C  0EFE               	movlw	254
  1107  00FC9E  6ECF               	movwf	4047,c	;volatile
  1108  00FCA0  0E00               	movlw	0
  1109  00FCA2  6ECE               	movwf	4046,c	;volatile
  1110                           
  1111                           ;CLASSB_ClockTest.c: 177: TMR1ON = 1;
  1112  00FCA4  80CD               	bsf	4045,0,c	;volatile
  1113  00FCA6                     l51:
  1114  00FCA6  A09E               	btfss	3998,0,c	;volatile
  1115  00FCA8  D7FE               	goto	l51
  1116                           
  1117                           ;CLASSB_ClockTest.c: 181: TMR1IE = 0;
  1118  00FCAA  909D               	bcf	3997,0,c	;volatile
  1119                           
  1120                           ;CLASSB_ClockTest.c: 182: TMR1IF = 0;
  1121  00FCAC  909E               	bcf	3998,0,c	;volatile
  1122  00FCAE  0012               	return	
  1123  00FCB0                     __end_of_CLASSB_ClockTestSetup:
  1124                           	opt stack 0
  1125  0000                     intcon	equ	0xFF2
  1126                           postinc0	equ	0xFEE
  1127                           wreg	equ	0xFE8
  1128                           status	equ	0xFD8
  1129                           intcon	equ	0xFF2
  1130                           postinc0	equ	0xFEE
  1131                           wreg	equ	0xFE8
  1132                           status	equ	0xFD8
  1133                           
  1134                           	psect	rparam
  1135  0000                     intcon	equ	0xFF2
  1136                           postinc0	equ	0xFEE
  1137                           wreg	equ	0xFE8
  1138                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     73      82
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ?___lldiv	unsigned long  size(2) Largest target is 0

    ?___lmul	unsigned long  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_CLASSB_ClockTest
    _CLASSB_ClockTest->___lldiv
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0     435
                                             60 COMRAM    13    13      0
                   _CLASSB_ClockTest
                               _Init
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CLASSB_ClockTest                                    35    24     11     345
                                             25 COMRAM    35    24     11
              _CLASSB_ClockTestSetup
              _CLASSB_ClockTestTimer
            _CLASSB_ClockTestRestore
                             ___lmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     105
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8      60
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _CLASSB_ClockTestRestore                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLASSB_ClockTestTimer                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLASSB_ClockTestSetup                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CLASSB_ClockTest
     _CLASSB_ClockTestSetup
     _CLASSB_ClockTestTimer
     _CLASSB_ClockTestRestore
     ___lmul
     ___lldiv
       ___lmul (ARG)
   _Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     49      52       1       86.3%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      52      12        0.0%
DATA                 0      0      54       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Mon Aug 04 13:13:27 2014

                                  l51 FCA6                                    l95 FD4A  
                                  l97 FD9E                                    l98 FD9C  
                                  u70 FE38                                    u75 FE2E  
                        __CFG_CP0$OFF 000000                          __CFG_CP1$OFF 000000  
                        __CFG_CP2$OFF 000000                          __CFG_CP3$OFF 000000  
                         __CFG_LVP$ON 000000                                   l102 FDA2  
                                 l542 FE08                                   l575 FCFA  
                                 l831 FDCC                                   l817 FD0E  
                                 l827 FDBC                                   l829 FDC8  
                                 l853 FEA6                                   l839 FDFA  
                                 l883 FFC4                                   l875 FF88  
                                 l877 FFBE                          __CFG_CPB$OFF 000000  
                        __CFG_CPD$OFF 000000                                   wreg 000FE8  
                                TMR1H 000FCF                                  TMR1L 000FCE  
                                _LATA 000F89                                  _LATB 000F8A  
                                _LATC 000F8B                                  _PIE1 000F9D  
                                _TMR1 000FCE                                  _Init FC60  
              ?_CLASSB_ClockTestTimer 0001                ?_CLASSB_ClockTestSetup 0001  
                                _main FD3E                         __CFG_BORV$190 000000  
                                start 0000                         __CFG_IESO$OFF 000000  
                               ?_Init 0001                                 STATUS 000FD8  
                               ?_main 0001                       __end_of___lldiv FE1A  
                               _T1CON 000FCD                                 _LATA0 007C48  
                               _LATA1 007C49                                 _TRISA 000F92  
                               _TRISB 000F93                                 _TRISC 000F94  
                       __CFG_WRT0$OFF 000000                         __CFG_WRT1$OFF 000000  
                       __CFG_WRT2$OFF 000000                   ___lmul@multiplicand 0005  
                       __CFG_WRT3$OFF 000000                        __CFG_EBTR0$OFF 000000  
                      __CFG_FCMEN$OFF 000000                        __CFG_EBTR1$OFF 000000  
                      __CFG_EBTR2$OFF 000000                        __CFG_EBTR3$OFF 000000  
                       __CFG_WRTB$OFF 000000                         __CFG_WRTC$OFF 000000  
                       __CFG_WRTD$OFF 000000                        __CFG_EBTRB$OFF 000000  
                  __CFG_MCLRE$INTMCLR 000000                                 main@i 0048  
  CLASSB_ClockTest@referenceFrequency 001E                                 status 000FD8  
                      __CFG_HFOFST$ON 000000                        __CFG_PBADEN$ON 000000  
                     __initialization FC4E                          __end_of_Init FC7E  
                        __end_of_main FDA4                     _CLASSB_T1CON_temp 0050  
                              ??_Init 0001                                ??_main 003D  
                       __activetblptr 000000                                _ANSELA 000F38  
                              _ANSELB 000F39                                _ANSELC 000F3A  
                      __CFG_WDTEN$OFF 000000                                _INTCON 000FF2  
                              _OSCCON 000FD3                                _TMR1IE 007CE8  
                              _TMR1IF 007CF0                                _TMR1ON 007E68  
                              _TRISC0 007CA0                                _TRISC1 007CA1  
                   ?_CLASSB_ClockTest 001A                    ??_CLASSB_ClockTest 0025  
                      __CFG_PWRTEN$ON 000000                        __CFG_XINST$OFF 000000  
                              ___lmul FCF2                        __CFG_STVREN$ON 000000  
            ?_CLASSB_ClockTestRestore 0001                             ??___lldiv 0015  
                              clear_0 FC54                         main@tolerance 0047  
                          __accesstop 0060               __end_of__initialization FC5A  
                      __pcstackCOMRAM 0001                     _CLASSB_TRISC_temp 0051  
           CLASSB_ClockTest@tolerance 0024               ??_CLASSB_ClockTestTimer 0001  
             ??_CLASSB_ClockTestSetup 0001                       __CFG_PLLCFG$OFF 000000  
     __end_of_CLASSB_ClockTestRestore FC4E                    __CFG_CCP2MX$PORTC1 000000  
                             ?___lmul 0001                    __CFG_CCP3MX$PORTB5 000000  
                      ___lmul@product 0009                    _CLASSB_INTCON_temp 004E  
                   _CLASSB_Clockcount 004A                               __Hparam 0000  
                             __Lparam 0000                main@referenceFrequency 0041  
                     __size_of___lmul 004C                               ___lldiv FDA4  
                         TimerTestEnd FCEE                               __pcinit FC4E  
                             __ramtop 1000                               __ptext0 FD3E  
                             __ptext1 FC60                               __ptext2 FE1A  
                             __ptext3 FDA4                               __ptext4 FCF2  
                             __ptext5 FC3C                               __ptext6 FCB0  
                             __ptext7 FC7E                  end_of_initialization FC5A  
CLASSB_ClockTest@Clock_toleranceCount 0035                       ___lldiv@divisor 0011  
                     ___lldiv@counter 0019                               postinc0 000FEE  
                           IncCounter FCE2                            _testResult 0052  
           __size_of_CLASSB_ClockTest 01E6                  CLASSB_ClockTest@msec 0022  
                    __CFG_FOSC$INTIO7 000000      __size_of_CLASSB_ClockTestRestore 0012  
                      __end_of___lmul FD3E                   start_initialization FC4E  
      __size_of_CLASSB_ClockTestTimer 0042        __size_of_CLASSB_ClockTestSetup 0032  
       __end_of_CLASSB_ClockTestTimer FCF2         __end_of_CLASSB_ClockTestSetup FCB0  
                    _CLASSB_PIE1_temp 004F                              ??___lmul 0009  
                         __pbssCOMRAM 004A            CLASSB_ClockTest@systemFreq 002D  
                            ?___lldiv 000D                      __CFG_PRICLKEN$ON 000000  
                    _CLASSB_ClockTest FE1A               _CLASSB_ClockTestRestore FC3C  
                    __CFG_WDTPS$32768 000000   CLASSB_ClockTest@Clock_expectedCount 0039  
                   _CLASSB_timerCount 004C                     ___lmul@multiplier 0001  
                            __Hrparam 0000                              __Lrparam 0000  
                            TimerTest FCB0                    __CFG_BOREN$SBORDIS 000000  
                   __CFG_P2BMX$PORTB5 000000                      __size_of___lldiv 0076  
           ??_CLASSB_ClockTestRestore 0001                         __size_of_Init 001E  
                       __size_of_main 0066                              main@msec 0045  
            __end_of_CLASSB_ClockTest 0000                      ___lldiv@dividend 000D  
               _CLASSB_ClockTestTimer FCB0                 _CLASSB_ClockTestSetup FC7E  
                _CLASSB_ClockTest$591 0031                      ___lldiv@quotient 0015  
      CLASSB_ClockTest@clockFrequency 001A                     __CFG_T3CMX$PORTC0 000000  
