

Microchip Technology PIC18 PRO Macro Assembler V1.12 build 49521 
                                                                                               Wed May 21 13:38:08 2014

HI-TECH Software Omniscient Code Generator (PRO mode) build 49521
     1                           	processor	18F87K90
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    13  0000                     
    14 ;;
    15 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    16 ;;
    17 ;; *************** function _main *****************
    18 ;; Defined at:
    19 ;;		line 148 in file "main.c"
    20 ;; Parameters:    Size  Location     Type
    21 ;;		None
    22 ;; Auto vars:     Size  Location     Type
    23 ;;  length          2   27[COMRAM] unsigned int 
    24 ;;  startAddress    2    0        PTR unsigned char 
    25 ;;		 -> RAM(3827), 
    26 ;;  bufferAddres    2    0        PTR unsigned char 
    27 ;;		 -> RAM(3827), 
    28 ;;  testResult      1   29[COMRAM] volatile unsigned char 
    29 ;; Return value:  Size  Location     Type
    30 ;;		None               void
    31 ;; Registers used:
    32 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
    33 ;; Tracked objects:
    34 ;;		On entry : 0/0
    35 ;;		On exit  : 0/0
    36 ;;		Unchanged: 0/0
    37 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
    38 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    39 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    40 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    41 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    42 ;;Total ram usage:        7 bytes
    43 ;; Hardware stack levels required when called:    2
    44 ;; This function calls:
    45 ;;		_CLASSB_RAMCheckerboardTest
    46 ;; This function is called by:
    47 ;;		Startup code after reset
    48 ;; This function uses a non-reentrant model
    49 ;;
    50                           
    51                           	psect	text0
    52  01FEAC                     __ptext0:
    53                           	opt stack 0
    54                           
    55                           ; #config settings
    56  01FEAC                     _main:
    57                           	opt stack 29
    58                           
    59                           ;main.c: 149: volatile uint8_t testResult = 0;
    60  01FEAC  6A1E               	clrf	main@testResult,c	;volatile
    61                           
    62                           ;main.c: 152: uint16_t length = 10;
    63  01FEAE  6A1D               	clrf	main@length+1,c
    64  01FEB0  0E0A               	movlw	10
    65  01FEB2  6E1C               	movwf	main@length,c
    66                           
    67                           ;main.c: 155: testResult = CLASSB_RAMCheckerboardTest(startAddress, length, bufferAddres
      +                          s);
    68  01FEB4  6A0C               	clrf	?_CLASSB_RAMCheckerboardTest+1,c
    69  01FEB6  0E30               	movlw	48
    70  01FEB8  6E0B               	movwf	?_CLASSB_RAMCheckerboardTest,c
    71  01FEBA  6A0E               	clrf	?_CLASSB_RAMCheckerboardTest+3,c
    72  01FEBC  0E0A               	movlw	10
    73  01FEBE  6E0D               	movwf	?_CLASSB_RAMCheckerboardTest+2,c
    74  01FEC0  6A10               	clrf	?_CLASSB_RAMCheckerboardTest+5,c
    75  01FEC2  0E3A               	movlw	58
    76  01FEC4  6E0F               	movwf	?_CLASSB_RAMCheckerboardTest+4,c
    77  01FEC6  EC8A  F0FF         	call	_CLASSB_RAMCheckerboardTest	;wreg free
    78  01FECA  6E1E               	movwf	main@testResult,c	;volatile
    79                           
    80                           ;main.c: 157: if (testResult == CLASSB_TEST_PASS)
    81  01FECC  661E               	tstfsz	main@testResult,c	;volatile
    82  01FECE  D000               	goto	l5
    83  01FED0                     l5:
    84  01FED0  F000               	nop		;# 
    85  01FED2                     l7:
    86  01FED2  D7FF               	goto	l7
    87                           
    88                           	psect	cinit
    89  01FEA6                     __pcinit:
    90                           	opt stack 0
    91  01FEA6                     start_initialization:
    92                           	opt stack 0
    93  01FEA6                     __initialization:
    94                           	opt stack 0
    95  01FEA6                     end_of_initialization:
    96                           	opt stack 0
    97  01FEA6                     __end_of__initialization:
    98                           	opt stack 0
    99  01FEA6  0100               	movlb	0
   100  01FEA8  EF56  F0FF         	goto	_main	;jump to C main() function
   101                           
   102                           	psect	cstackCOMRAM
   103  000001                     __pcstackCOMRAM:
   104                           	opt stack 0
   105  000001                     ?_memcpy:
   106                           	opt stack 0
   107  000001                     memcpy@d1:
   108                           	opt stack 0
   109                           
   110                           ; 2 bytes @ 0x0
   111  000001                     	ds	2
   112  000003                     memcpy@s1:
   113                           	opt stack 0
   114                           
   115                           ; 2 bytes @ 0x2
   116  000003                     	ds	2
   117  000005                     memcpy@n:
   118                           	opt stack 0
   119                           
   120                           ; 2 bytes @ 0x4
   121  000005                     	ds	2
   122  000007                     memcpy@d:
   123                           	opt stack 0
   124                           
   125                           ; 2 bytes @ 0x6
   126  000007                     	ds	2
   127  000009                     memcpy@s:
   128                           	opt stack 0
   129                           
   130                           ; 2 bytes @ 0x8
   131  000009                     	ds	2
   132  00000B                     ?_CLASSB_RAMCheckerboardTest:
   133                           	opt stack 0
   134  00000B                     CLASSB_RAMCheckerboardTest@startAddress:
   135                           	opt stack 0
   136                           
   137                           ; 2 bytes @ 0xA
   138  00000B                     	ds	2
   139  00000D                     CLASSB_RAMCheckerboardTest@length:
   140                           	opt stack 0
   141                           
   142                           ; 2 bytes @ 0xC
   143  00000D                     	ds	2
   144  00000F                     CLASSB_RAMCheckerboardTest@bufferAddress:
   145                           	opt stack 0
   146                           
   147                           ; 2 bytes @ 0xE
   148  00000F                     	ds	2
   149  000011                     ??_CLASSB_RAMCheckerboardTest:
   150                           
   151                           ; 0 bytes @ 0x10
   152  000011                     	ds	2
   153  000013                     CLASSB_RAMCheckerboardTest@tempAddr:
   154                           	opt stack 0
   155                           
   156                           ; 2 bytes @ 0x12
   157  000013                     	ds	2
   158  000015                     CLASSB_RAMCheckerboardTest@r:
   159                           	opt stack 0
   160                           
   161                           ; 1 bytes @ 0x14
   162  000015                     	ds	1
   163  000016                     CLASSB_RAMCheckerboardTest@i:
   164                           	opt stack 0
   165                           
   166                           ; 1 bytes @ 0x15
   167  000016                     	ds	1
   168  000017                     CLASSB_RAMCheckerboardTest@checker:
   169                           	opt stack 0
   170                           
   171                           ; 1 bytes @ 0x16
   172  000017                     	ds	1
   173  000018                     
   174                           ; 0 bytes @ 0x17
   175  000018                     	ds	4
   176  00001C                     main@length:
   177                           	opt stack 0
   178                           
   179                           ; 2 bytes @ 0x1B
   180  00001C                     	ds	2
   181  00001E                     main@testResult:
   182                           	opt stack 0
   183                           
   184                           ; 1 bytes @ 0x1D
   185  00001E                     	ds	1
   186                           
   187 ;; *************** function _CLASSB_RAMCheckerboardTest *****************
   188 ;; Defined at:
   189 ;;		line 69 in file "CLASSB_RAMCheckerboardTest.c"
   190 ;; Parameters:    Size  Location     Type
   191 ;;  startAddress    2   10[COMRAM] PTR unsigned char 
   192 ;;		 -> RAM(3827), 
   193 ;;  length          2   12[COMRAM] unsigned int 
   194 ;;  bufferAddres    2   14[COMRAM] PTR unsigned char 
   195 ;;		 -> RAM(3827), 
   196 ;; Auto vars:     Size  Location     Type
   197 ;;  tempAddr        2   18[COMRAM] PTR unsigned char 
   198 ;;		 -> RAM(3827), 
   199 ;;  checker         1   22[COMRAM] volatile unsigned char 
   200 ;;  i               1   21[COMRAM] volatile unsigned char 
   201 ;;  r               1   20[COMRAM] volatile unsigned char 
   202 ;; Return value:  Size  Location     Type
   203 ;;                  1    wreg      enum E11556
   204 ;; Registers used:
   205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   206 ;; Tracked objects:
   207 ;;		On entry : 0/0
   208 ;;		On exit  : 0/0
   209 ;;		Unchanged: FFFFFFF0/0
   210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   211 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   212 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   213 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   214 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   215 ;;Total ram usage:       13 bytes
   216 ;; Hardware stack levels used:    1
   217 ;; Hardware stack levels required when called:    1
   218 ;; This function calls:
   219 ;;		_memcpy
   220 ;; This function is called by:
   221 ;;		_main
   222 ;; This function uses a non-reentrant model
   223 ;;
   224                           
   225                           	psect	text1
   226  01FF14                     __ptext1:
   227                           	opt stack 0
   228  01FF14                     __end_of_main:
   229                           	opt stack 0
   230  01FF14                     _CLASSB_RAMCheckerboardTest:
   231                           	opt stack 29
   232                           
   233                           ;CLASSB_RAMCheckerboardTest.c: 70: volatile unsigned char i;
   234                           ;CLASSB_RAMCheckerboardTest.c: 71: volatile unsigned char r;
   235                           ;CLASSB_RAMCheckerboardTest.c: 72: volatile unsigned char checker = 0xAA;
   236  01FF14  0EAA               	movlw	170
   237  01FF16  6E17               	movwf	CLASSB_RAMCheckerboardTest@checker,c	;volatile
   238                           
   239                           ;CLASSB_RAMCheckerboardTest.c: 74: uint8_t* tempAddr;
   240                           ;CLASSB_RAMCheckerboardTest.c: 77: if (bufferAddress != (0))
   241  01FF18  5010               	movf	CLASSB_RAMCheckerboardTest@bufferAddress+1,w,c
   242  01FF1A  100F               	iorwf	CLASSB_RAMCheckerboardTest@bufferAddress,w,c
   243  01FF1C  E00E               	bz	l636
   244                           
   245                           ;CLASSB_RAMCheckerboardTest.c: 78: memcpy(bufferAddress, startAddress, length);
   246  01FF1E  C00F  F001         	movff	CLASSB_RAMCheckerboardTest@bufferAddress,?_memcpy
   247  01FF22  C010  F002         	movff	CLASSB_RAMCheckerboardTest@bufferAddress+1,?_memcpy+1
   248  01FF26  C00B  F003         	movff	CLASSB_RAMCheckerboardTest@startAddress,?_memcpy+2
   249  01FF2A  C00C  F004         	movff	CLASSB_RAMCheckerboardTest@startAddress+1,?_memcpy+3
   250  01FF2E  C00D  F005         	movff	CLASSB_RAMCheckerboardTest@length,?_memcpy+4
   251  01FF32  C00E  F006         	movff	CLASSB_RAMCheckerboardTest@length+1,?_memcpy+5
   252  01FF36  EC6A  F0FF         	call	_memcpy	;wreg free
   253  01FF3A                     l636:
   254                           
   255                           ;CLASSB_RAMCheckerboardTest.c: 79: tempAddr = startAddress;
   256  01FF3A  C00B  F013         	movff	CLASSB_RAMCheckerboardTest@startAddress,CLASSB_RAMCheckerboardTest@tempAddr
   257  01FF3E  C00C  F014         	movff	CLASSB_RAMCheckerboardTest@startAddress+1,CLASSB_RAMCheckerboardTest@tempAddr+1
   258                           
   259                           ;CLASSB_RAMCheckerboardTest.c: 81: for (r=0;r<2;r++)
   260  01FF42  6A15               	clrf	CLASSB_RAMCheckerboardTest@r,c	;volatile
   261  01FF44  D048               	goto	L1
   262  01FF46                     l16:
   263                           
   264                           ;CLASSB_RAMCheckerboardTest.c: 82: {
   265                           ;CLASSB_RAMCheckerboardTest.c: 84: for (i = 0; i < length; i++)
   266  01FF46  6A16               	clrf	CLASSB_RAMCheckerboardTest@i,c	;volatile
   267  01FF48  D00B               	goto	l652
   268  01FF4A                     l644:
   269                           
   270                           ;CLASSB_RAMCheckerboardTest.c: 85: {
   271                           ;CLASSB_RAMCheckerboardTest.c: 86: (*startAddress) = checker;
   272  01FF4A  C00B  FFD9         	movff	CLASSB_RAMCheckerboardTest@startAddress,fsr2l
   273  01FF4E  C00C  FFDA         	movff	CLASSB_RAMCheckerboardTest@startAddress+1,fsr2h
   274  01FF52  C017  FFDF         	movff	CLASSB_RAMCheckerboardTest@checker,indf2	;volatile
   275                           
   276                           ;CLASSB_RAMCheckerboardTest.c: 87: startAddress++;
   277  01FF56  4A0B               	infsnz	CLASSB_RAMCheckerboardTest@startAddress,f,c
   278  01FF58  2A0C               	incf	CLASSB_RAMCheckerboardTest@startAddress+1,f,c
   279                           
   280                           ;CLASSB_RAMCheckerboardTest.c: 88: checker = ~checker;
   281  01FF5A  0EFF               	movlw	255
   282  01FF5C  1A17               	xorwf	CLASSB_RAMCheckerboardTest@checker,f,c	;volatile
   283  01FF5E  2A16               	incf	CLASSB_RAMCheckerboardTest@i,f,c	;volatile
   284  01FF60                     l652:
   285  01FF60  5016               	movf	CLASSB_RAMCheckerboardTest@i,w,c	;volatile
   286  01FF62  6E11               	movwf	??_CLASSB_RAMCheckerboardTest& (0+255),c
   287  01FF64  6A12               	clrf	(??_CLASSB_RAMCheckerboardTest+1)& (0+255),c
   288  01FF66  500D               	movf	CLASSB_RAMCheckerboardTest@length,w,c
   289  01FF68  5C11               	subwf	??_CLASSB_RAMCheckerboardTest,w,c
   290  01FF6A  500E               	movf	CLASSB_RAMCheckerboardTest@length+1,w,c
   291  01FF6C  5812               	subwfb	??_CLASSB_RAMCheckerboardTest+1,w,c
   292  01FF6E  E3ED               	bnc	l644
   293                           
   294                           ;CLASSB_RAMCheckerboardTest.c: 89: }
   295                           ;CLASSB_RAMCheckerboardTest.c: 90: startAddress = tempAddr;
   296  01FF70  C013  F00B         	movff	CLASSB_RAMCheckerboardTest@tempAddr,CLASSB_RAMCheckerboardTest@startAddress
   297  01FF74  C014  F00C         	movff	CLASSB_RAMCheckerboardTest@tempAddr+1,CLASSB_RAMCheckerboardTest@startAddress+1
   298                           
   299                           ;CLASSB_RAMCheckerboardTest.c: 93: for (i=0;i<length;i++)
   300  01FF78  6A16               	clrf	CLASSB_RAMCheckerboardTest@i,c	;volatile
   301  01FF7A  D01E               	goto	l21
   302  01FF7C                     l654:
   303                           
   304                           ;CLASSB_RAMCheckerboardTest.c: 94: {
   305                           ;CLASSB_RAMCheckerboardTest.c: 95: if ((*startAddress) != checker)
   306  01FF7C  C00B  FFD9         	movff	CLASSB_RAMCheckerboardTest@startAddress,fsr2l
   307  01FF80  C00C  FFDA         	movff	CLASSB_RAMCheckerboardTest@startAddress+1,fsr2h
   308  01FF84  50DF               	movf	indf2,w,c
   309  01FF86  1817               	xorwf	CLASSB_RAMCheckerboardTest@checker,w,c	;volatile
   310  01FF88  E012               	bz	l664
   311                           
   312                           ;CLASSB_RAMCheckerboardTest.c: 96: {
   313                           ;CLASSB_RAMCheckerboardTest.c: 97: if (bufferAddress != (0))
   314  01FF8A  5010               	movf	CLASSB_RAMCheckerboardTest@bufferAddress+1,w,c
   315  01FF8C  100F               	iorwf	CLASSB_RAMCheckerboardTest@bufferAddress,w,c
   316  01FF8E  E00E               	bz	l660
   317                           
   318                           ;CLASSB_RAMCheckerboardTest.c: 98: memcpy(startAddress, bufferAddress, length);
   319  01FF90  C00B  F001         	movff	CLASSB_RAMCheckerboardTest@startAddress,?_memcpy
   320  01FF94  C00C  F002         	movff	CLASSB_RAMCheckerboardTest@startAddress+1,?_memcpy+1
   321  01FF98  C00F  F003         	movff	CLASSB_RAMCheckerboardTest@bufferAddress,?_memcpy+2
   322  01FF9C  C010  F004         	movff	CLASSB_RAMCheckerboardTest@bufferAddress+1,?_memcpy+3
   323  01FFA0  C00D  F005         	movff	CLASSB_RAMCheckerboardTest@length,?_memcpy+4
   324  01FFA4  C00E  F006         	movff	CLASSB_RAMCheckerboardTest@length+1,?_memcpy+5
   325  01FFA8  EC6A  F0FF         	call	_memcpy	;wreg free
   326  01FFAC                     l660:
   327                           
   328                           ;CLASSB_RAMCheckerboardTest.c: 99: return CLASSB_TEST_FAIL;
   329  01FFAC  0C01               	retlw	1
   330  01FFAE                     l664:
   331                           
   332                           ;CLASSB_RAMCheckerboardTest.c: 100: }
   333                           ;CLASSB_RAMCheckerboardTest.c: 101: startAddress++;
   334  01FFAE  4A0B               	infsnz	CLASSB_RAMCheckerboardTest@startAddress,f,c
   335  01FFB0  2A0C               	incf	CLASSB_RAMCheckerboardTest@startAddress+1,f,c
   336                           
   337                           ;CLASSB_RAMCheckerboardTest.c: 102: checker = ~checker;
   338  01FFB2  0EFF               	movlw	255
   339  01FFB4  1A17               	xorwf	CLASSB_RAMCheckerboardTest@checker,f,c	;volatile
   340  01FFB6  2A16               	incf	CLASSB_RAMCheckerboardTest@i,f,c	;volatile
   341  01FFB8                     l21:
   342  01FFB8  5016               	movf	CLASSB_RAMCheckerboardTest@i,w,c	;volatile
   343  01FFBA  6E11               	movwf	??_CLASSB_RAMCheckerboardTest& (0+255),c
   344  01FFBC  6A12               	clrf	(??_CLASSB_RAMCheckerboardTest+1)& (0+255),c
   345  01FFBE  500D               	movf	CLASSB_RAMCheckerboardTest@length,w,c
   346  01FFC0  5C11               	subwf	??_CLASSB_RAMCheckerboardTest,w,c
   347  01FFC2  500E               	movf	CLASSB_RAMCheckerboardTest@length+1,w,c
   348  01FFC4  5812               	subwfb	??_CLASSB_RAMCheckerboardTest+1,w,c
   349  01FFC6  E3DA               	bnc	l654
   350                           
   351                           ;CLASSB_RAMCheckerboardTest.c: 103: }
   352                           ;CLASSB_RAMCheckerboardTest.c: 105: checker = ~checker;
   353  01FFC8  0EFF               	movlw	255
   354  01FFCA  1A17               	xorwf	CLASSB_RAMCheckerboardTest@checker,f,c	;volatile
   355                           
   356                           ;CLASSB_RAMCheckerboardTest.c: 106: startAddress = tempAddr;
   357  01FFCC  C013  F00B         	movff	CLASSB_RAMCheckerboardTest@tempAddr,CLASSB_RAMCheckerboardTest@startAddress
   358  01FFD0  C014  F00C         	movff	CLASSB_RAMCheckerboardTest@tempAddr+1,CLASSB_RAMCheckerboardTest@startAddress+1
   359  01FFD4  2A15               	incf	CLASSB_RAMCheckerboardTest@r,f,c	;volatile
   360  01FFD6                     L1:
   361  01FFD6  0E01               	movlw	1
   362  01FFD8  6415               	cpfsgt	CLASSB_RAMCheckerboardTest@r,c	;volatile
   363  01FFDA  D7B5               	goto	l16
   364                           
   365                           ;CLASSB_RAMCheckerboardTest.c: 107: }
   366                           ;CLASSB_RAMCheckerboardTest.c: 108: if (bufferAddress != (0))
   367  01FFDC  5010               	movf	CLASSB_RAMCheckerboardTest@bufferAddress+1,w,c
   368  01FFDE  100F               	iorwf	CLASSB_RAMCheckerboardTest@bufferAddress,w,c
   369  01FFE0  E00E               	bz	l680
   370                           
   371                           ;CLASSB_RAMCheckerboardTest.c: 109: memcpy(startAddress, bufferAddress, length);
   372  01FFE2  C00B  F001         	movff	CLASSB_RAMCheckerboardTest@startAddress,?_memcpy
   373  01FFE6  C00C  F002         	movff	CLASSB_RAMCheckerboardTest@startAddress+1,?_memcpy+1
   374  01FFEA  C00F  F003         	movff	CLASSB_RAMCheckerboardTest@bufferAddress,?_memcpy+2
   375  01FFEE  C010  F004         	movff	CLASSB_RAMCheckerboardTest@bufferAddress+1,?_memcpy+3
   376  01FFF2  C00D  F005         	movff	CLASSB_RAMCheckerboardTest@length,?_memcpy+4
   377  01FFF6  C00E  F006         	movff	CLASSB_RAMCheckerboardTest@length+1,?_memcpy+5
   378  01FFFA  EC6A  F0FF         	call	_memcpy	;wreg free
   379  01FFFE                     l680:
   380                           
   381                           ;CLASSB_RAMCheckerboardTest.c: 110: return CLASSB_TEST_PASS;
   382  01FFFE  0C00               	retlw	0
   383  020000                     __end_of_CLASSB_RAMCheckerboardTest:
   384                           	opt stack 0
   385                           indf2	equ	0xFDF
   386                           fsr2h	equ	0xFDA
   387                           fsr2l	equ	0xFD9
   388                           
   389 ;; *************** function _memcpy *****************
   390 ;; Defined at:
   391 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.12\sources\memcpy.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;  d1              2    0[COMRAM] PTR void 
   394 ;;		 -> RAM(3827), 
   395 ;;  s1              2    2[COMRAM] PTR const void 
   396 ;;		 -> RAM(3827), 
   397 ;;  n               2    4[COMRAM] unsigned int 
   398 ;; Auto vars:     Size  Location     Type
   399 ;;  s               2    8[COMRAM] PTR const unsigned char 
   400 ;;		 -> RAM(3827), 
   401 ;;  d               2    6[COMRAM] PTR unsigned char 
   402 ;;		 -> RAM(3827), 
   403 ;; Return value:  Size  Location     Type
   404 ;;                  2    wreg      PTR void 
   405 ;; Registers used:
   406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: FFFFFFF0/0
   411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   412 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   413 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   415 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   416 ;;Total ram usage:       10 bytes
   417 ;; Hardware stack levels used:    1
   418 ;; This function calls:
   419 ;;		Nothing
   420 ;; This function is called by:
   421 ;;		_CLASSB_RAMCheckerboardTest
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425                           	psect	text2
   426  01FED4                     __ptext2:
   427                           	opt stack 0
   428  01FED4                     _memcpy:
   429                           	opt stack 29
   430  01FED4  C003  F009         	movff	memcpy@s1,memcpy@s
   431  01FED8  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
   432  01FEDC  C001  F007         	movff	memcpy@d1,memcpy@d
   433  01FEE0  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
   434  01FEE4  D00E               	goto	l628
   435  01FEE6                     l622:
   436  01FEE6  C009  FFD9         	movff	memcpy@s,fsr2l
   437  01FEEA  C00A  FFDA         	movff	memcpy@s+1,fsr2h
   438  01FEEE  C007  FFE1         	movff	memcpy@d,fsr1l
   439  01FEF2  C008  FFE2         	movff	memcpy@d+1,fsr1h
   440  01FEF6  CFDF FFE7          	movff	indf2,indf1
   441  01FEFA  4A09               	infsnz	memcpy@s,f,c
   442  01FEFC  2A0A               	incf	memcpy@s+1,f,c
   443  01FEFE  4A07               	infsnz	memcpy@d,f,c
   444  01FF00  2A08               	incf	memcpy@d+1,f,c
   445  01FF02                     l628:
   446  01FF02  0605               	decf	memcpy@n,f,c
   447  01FF04  A0D8               	btfss	status,0,c
   448  01FF06  0606               	decf	memcpy@n+1,f,c
   449  01FF08  2805               	incf	memcpy@n& (0+255),w,c
   450  01FF0A  B4D8               	btfsc	status,2,c
   451  01FF0C  2806               	incf	(memcpy@n+1)& (0+255),w,c
   452  01FF0E  B4D8               	btfsc	status,2,c
   453  01FF10  0012               	return	
   454  01FF12  D7E9               	goto	l622
   455  01FF14                     __end_of_memcpy:
   456                           	opt stack 0
   457  0000                     indf1	equ	0xFE7
   458                           fsr1h	equ	0xFE2
   459                           fsr1l	equ	0xFE1
   460                           indf2	equ	0xFDF
   461                           fsr2h	equ	0xFDA
   462                           fsr2l	equ	0xFD9
   463                           status	equ	0xFD8
   464                           indf1	equ	0xFE7
   465                           fsr1h	equ	0xFE2
   466                           fsr1l	equ	0xFE1
   467                           indf2	equ	0xFDF
   468                           fsr2h	equ	0xFDA
   469                           fsr2l	equ	0xFD9
   470                           status	equ	0xFD8
   471                           
   472                           	psect	text3
   473  000000                     __ptext3:
   474                           	opt stack 0
   475                           indf1	equ	0xFE7
   476                           fsr1h	equ	0xFE2
   477                           fsr1l	equ	0xFE1
   478                           indf2	equ	0xFDF
   479                           fsr2h	equ	0xFDA
   480                           fsr2l	equ	0xFD9
   481                           status	equ	0xFD8
   482                           
   483                           	psect	rparam
   484  0000                     indf1	equ	0xFE7
   485                           fsr1h	equ	0xFE2
   486                           fsr1l	equ	0xFE1
   487                           indf2	equ	0xFDF
   488                           fsr2h	equ	0xFDA
   489                           fsr2l	equ	0xFD9
   490                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      30
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          244      0       0

Pointer List with Targets:

    ?_memcpy	PTR void  size(2) Largest target is 3827
		 -> RAM(DATA[3827]), 

    memcpy@d1	PTR void  size(2) Largest target is 3827
		 -> RAM(DATA[3827]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3827
		 -> RAM(DATA[3827]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3827
		 -> RAM(DATA[3827]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3827
		 -> RAM(DATA[3827]), 

    CLASSB_RAMCheckerboardTest@tempAddr	PTR unsigned char  size(2) Largest target is 3827
		 -> RAM(DATA[3827]), 

    sp__memcpy	PTR void  size(2) Largest target is 3827
		 -> RAM(DATA[3827]), 

    CLASSB_RAMCheckerboardTest@startAddress	PTR unsigned char  size(2) Largest target is 3827
		 -> RAM(DATA[3827]), 

    CLASSB_RAMCheckerboardTest@bufferAddress	PTR unsigned char  size(2) Largest target is 3827
		 -> RAM(DATA[3827]), 

    main@bufferAddress	PTR unsigned char  size(2) Largest target is 3827
		 -> RAM(DATA[3827]), 

    main@startAddress	PTR unsigned char  size(2) Largest target is 3827
		 -> RAM(DATA[3827]), 


Critical Paths under _main in COMRAM

    _main->_CLASSB_RAMCheckerboardTest
    _CLASSB_RAMCheckerboardTest->_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     545
                                             23 COMRAM     7     7      0
         _CLASSB_RAMCheckerboardTest
 ---------------------------------------------------------------------------------
 (1) _CLASSB_RAMCheckerboardTest                          13     7      6     455
                                             10 COMRAM    13     7      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              10     4      6      80
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CLASSB_RAMCheckerboardTest
     _memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     1E      1E       1       31.6%
STACK                0      0       2       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           F4      0       0      33        0.0%
BANK14              F4      0       0      34        0.0%
BIGRAM             EF3      0       0      35        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.12 build 49521 
Symbol Table                                                                                   Wed May 21 13:38:08 2014

                                      l5 FED0                                        l7 FED2  
                                     l21 FFB8                                       l16 FF46  
                            __CFG_BORV$3 000000                             __CFG_CP0$OFF 000000  
                           __CFG_CP1$OFF 000000                             __CFG_CP2$OFF 000000  
                           __CFG_CP3$OFF 000000                             __CFG_CP4$OFF 000000  
                           __CFG_CP5$OFF 000000                             __CFG_CP6$OFF 000000  
                           __CFG_CP7$OFF 000000                                      l622 FEE6  
                                    l628 FF02                                      l660 FFAC  
                                    l644 FF4A                                      l652 FF60  
                                    l636 FF3A                                      l654 FF7C  
                                    l680 FFFE                                      l664 FFAE  
                           __CFG_CPB$OFF 000000                             __CFG_CPD$OFF 000000  
                                   _main FEAC                                     fsr1h 000FE2  
                                   fsr2h 000FDA                                     indf1 000FE7  
                                   fsr1l 000FE1                                     indf2 000FDF  
                                   fsr2l 000FD9                                     start 0000  
                          __CFG_IESO$OFF 000000                            __CFG_MCLRE$ON 000000  
                          __CFG_RETEN$ON 000000                                    ?_main 0001  
       CLASSB_RAMCheckerboardTest@length 000D                            __CFG_WRT0$OFF 000000  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                            __CFG_WRT4$OFF 000000  
                         __CFG_EBRT0$OFF 000000                            __CFG_WRT5$OFF 000000  
                         __CFG_EBRT1$OFF 000000                            __CFG_WRT6$OFF 000000  
                         __CFG_EBRT2$OFF 000000                            __CFG_WRT7$OFF 000000  
                         __CFG_EBRT3$OFF 000000                           __CFG_EBRT4$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBRT5$OFF 000000  
                         __CFG_EBRT6$OFF 000000                           __CFG_EBRT7$OFF 000000  
                          __CFG_WRTB$OFF 000000                            __CFG_WRTC$OFF 000000  
                          __CFG_WRTD$OFF 000000                           __CFG_EBRTB$OFF 000000  
                                  status 000FD8                          __initialization FEA6  
                           __end_of_main FF14                                   ??_main 0018  
                          __activetblptr 000000                          __CFG_BBSIZ$BB2K 000000  
                         __CFG_WDTEN$OFF 000000                           __CFG_XINST$OFF 000000  
                         __CFG_STVREN$ON 000000                                   _memcpy FED4  
                             __accesstop 0060                  __end_of__initialization FEA6  
                         __pcstackCOMRAM 0001             ??_CLASSB_RAMCheckerboardTest 0011  
                        __CFG_PLLCFG$OFF 000000      __size_of_CLASSB_RAMCheckerboardTest 00EC  
                                ?_memcpy 0001                          __CFG_PWRTEN$OFF 000000  
                                __Hparam 0000                                  __Lparam 0000  
                                __pcinit FEA6                          __size_of_memcpy 0040  
                                __ramtop 0F00                                  __ptext0 FEAC  
                                __ptext1 FF14                                  __ptext2 FED4  
                                __ptext3 0000                        __CFG_MSSPMSK$MSK7 000000  
                   end_of_initialization FEA6                                  memcpy@d 0007  
                                memcpy@n 0005                                  memcpy@s 0009  
                         main@testResult 001E       __end_of_CLASSB_RAMCheckerboardTest 0000  
             _CLASSB_RAMCheckerboardTest FF14                         __CFG_FOSC$INTIO2 000000  
 CLASSB_RAMCheckerboardTest@startAddress 000B                        __CFG_SOSCSEL$HIGH 000000  
                             main@length 001C              CLASSB_RAMCheckerboardTest@i 0016  
            CLASSB_RAMCheckerboardTest@r 0015                           __end_of_memcpy FF14  
     CLASSB_RAMCheckerboardTest@tempAddr 0013                      start_initialization FEA6  
                               ??_memcpy 0007                        __CFG_CCP2MX$PORTC 000000  
            ?_CLASSB_RAMCheckerboardTest 000B                        __CFG_ECCPMX$PORTE 000000  
      CLASSB_RAMCheckerboardTest@checker 0017                                 __Hrparam 0000  
                               __Lrparam 0000                       __CFG_BOREN$SBORDIS 000000  
                          __size_of_main 0068  CLASSB_RAMCheckerboardTest@bufferAddress 000F  
                    __CFG_RTCOSC$SOSCREF 000000                      __CFG_INTOSCSEL$HIGH 000000  
                               memcpy@d1 0001                                 memcpy@s1 0003  
                     __CFG_WDTPS$1048576 000000                      __CFG_BORPWR$ZPBORMV 000000  
