

Microchip Technology PIC18 PRO Macro Assembler V1.12 build 49521 
                                                                                               Tue Jun 03 10:38:36 2014

HI-TECH Software Omniscient Code Generator (PRO mode) build 49521
     1                           	processor	18F14K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    13                           	dabs	1,0x64,2
    14                           	dabs	1,0x66,2
    15                           	dabs	1,0x62,2
    16                           	dabs	1,0x60,3
    17                           	dabs	1,0x68,2
    18  0000                     
    19 ;;
    20 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    21 ;;
    22 ;; *************** function _main *****************
    23 ;; Defined at:
    24 ;;		line 121 in file "main.c"
    25 ;; Parameters:    Size  Location     Type
    26 ;;		None
    27 ;; Auto vars:     Size  Location     Type
    28 ;;  testResult      1    0[COMRAM] volatile unsigned char 
    29 ;; Return value:  Size  Location     Type
    30 ;;		None               void
    31 ;; Registers used:
    32 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
    33 ;; Tracked objects:
    34 ;;		On entry : 0/0
    35 ;;		On exit  : 0/0
    36 ;;		Unchanged: 0/0
    37 ;; Data sizes:     COMRAM   BANK0   BANK1
    38 ;;      Params:         0       0       0
    39 ;;      Locals:         1       0       0
    40 ;;      Temps:          0       0       0
    41 ;;      Totals:         1       0       0
    42 ;;Total ram usage:        1 bytes
    43 ;; Hardware stack levels required when called:    1
    44 ;; This function calls:
    45 ;;		_CLASSB_RAMMarchCStackTest
    46 ;; This function is called by:
    47 ;;		Startup code after reset
    48 ;; This function uses a non-reentrant model
    49 ;;
    50                           
    51                           	psect	text0
    52  003C24                     __ptext0:
    53                           	opt stack 0
    54  0000                     _TOSU	set	4095
    55  0000                     _TOSL	set	4093
    56  0000                     _TOSH	set	4094
    57  0000                     _STKPTR	set	4092
    58  0000                     _FSR0	set	4073
    59  0000                     
    60                           ; #config settings
    61  003C24                     _main:
    62                           	opt stack 30
    63                           
    64                           ;main.c: 122: volatile uint8_t testResult = 0;
    65  003C24  6A02               	clrf	main@testResult,c	;volatile
    66                           
    67                           ;main.c: 124: CLASSB_MarchbufferAddress = (char*)0xC0;
    68  003C26  0100               	movlb	0	; () banked
    69  003C28  6B63               	clrf	99,b
    70  003C2A  0EC0               	movlw	192
    71  003C2C  6F62               	movwf	98,b
    72                           
    73                           ; BSR set to: 0
    74                           ;main.c: 126: testResult = CLASSB_RAMMarchCStackTest();
    75  003C2E  EC1E  F01E         	call	_CLASSB_RAMMarchCStackTest	;wreg free
    76  003C32  6E02               	movwf	main@testResult,c	;volatile
    77                           
    78                           ;main.c: 128: if (testResult == CLASSB_TEST_PASS)
    79  003C34  6602               	tstfsz	main@testResult,c	;volatile
    80  003C36  D000               	goto	l36
    81  003C38                     l36:
    82  003C38  F000               	nop		;# 
    83  003C3A                     l38:
    84  003C3A  D7FF               	goto	l38
    85                           
    86                           	psect	cinit
    87  003C1C                     __pcinit:
    88                           	opt stack 0
    89  003C1C                     start_initialization:
    90                           	opt stack 0
    91  003C1C                     __initialization:
    92                           	opt stack 0
    93                           
    94                           ; Clear objects allocated to COMRAM (1 bytes)
    95  003C1C  6A01               	clrf	__pbssCOMRAM& (0+255),c
    96  003C1E                     end_of_initialization:
    97                           	opt stack 0
    98  003C1E                     __end_of__initialization:
    99                           	opt stack 0
   100  003C1E  0100               	movlb	0
   101  003C20  EF12  F01E         	goto	_main	;jump to C main() function
   102                           
   103                           	psect	bssCOMRAM
   104  000001                     __pbssCOMRAM:
   105                           	opt stack 0
   106  000001                     _stackTestResult:
   107                           	opt stack 0
   108  000001                     	ds	1
   109                           
   110                           	psect	cstackCOMRAM
   111  000002                     __pcstackCOMRAM:
   112                           	opt stack 0
   113  000002                     main@testResult:
   114                           	opt stack 0
   115                           
   116                           ; 1 bytes @ 0x0
   117  000002                     	ds	1
   118                           
   119 ;; *************** function _CLASSB_RAMMarchCStackTest *****************
   120 ;; Defined at:
   121 ;;		line 68 in file "CLASSB_RAMMARCHCStackTest.c"
   122 ;; Parameters:    Size  Location     Type
   123 ;;		None
   124 ;; Auto vars:     Size  Location     Type
   125 ;;		None
   126 ;; Return value:  Size  Location     Type
   127 ;;                  1    wreg      enum E3995
   128 ;; Registers used:
   129 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   130 ;; Tracked objects:
   131 ;;		On entry : F/0
   132 ;;		On exit  : 0/0
   133 ;;		Unchanged: 0/0
   134 ;; Data sizes:     COMRAM   BANK0   BANK1
   135 ;;      Params:         0       0       0
   136 ;;      Locals:         0       0       0
   137 ;;      Temps:          0       0       0
   138 ;;      Totals:         0       0       0
   139 ;;Total ram usage:        0 bytes
   140 ;; Hardware stack levels used:    1
   141 ;; This function calls:
   142 ;;		Nothing
   143 ;; This function is called by:
   144 ;;		_main
   145 ;; This function uses a non-reentrant model
   146 ;;
   147                           
   148                           	psect	text1
   149  003C3C                     __ptext1:
   150                           	opt stack 0
   151  003C3C                     __end_of_main:
   152                           	opt stack 0
   153  003C3C                     _CLASSB_RAMMarchCStackTest:
   154                           	opt stack 30
   155                           
   156                           ; BSR set to: 0
   157                           ;CLASSB_RAMMARCHCStackTest.c: 72: CLASSB_MARCHtempAddress = CLASSB_MarchbufferAddress;
   158  003C3C  C062 F064          	movff	98,100
   159  003C40  C063 F065          	movff	99,101
   160                           
   161                           ; BSR set to: 0
   162                           ;CLASSB_RAMMARCHCStackTest.c: 73: *CLASSB_MarchbufferAddress = STKPTR;
   163  003C44  C062 FFD9          	movff	98,fsr2l
   164  003C48  C063 FFDA          	movff	99,fsr2h
   165  003C4C  CFFC FFDF          	movff	stkptr,indf2	;volatile
   166                           
   167                           ; BSR set to: 0
   168                           ;CLASSB_RAMMARCHCStackTest.c: 75: CLASSB_MarchbufferAddress++;
   169  003C50  4B62               	infsnz	98,f,b
   170  003C52  2B63               	incf	99,f,b
   171                           
   172                           ; BSR set to: 0
   173                           ;CLASSB_RAMMARCHCStackTest.c: 77: for (CLASSB_MarchIndex = 1; CLASSB_MarchIndex <= 31; C
      +                          LASSB_MarchIndex++)
   174  003C54  6B67               	clrf	103,b
   175  003C56  0E01               	movlw	1
   176  003C58  6F66               	movwf	102,b
   177  003C5A                     l636:
   178                           
   179                           ; BSR set to: 0
   180  003C5A  0E20               	movlw	32
   181  003C5C  5D66               	subwf	102,w,b
   182  003C5E  0E00               	movlw	0
   183  003C60  5967               	subwfb	103,w,b
   184  003C62  E21D               	bc	l26
   185                           
   186                           ; BSR set to: 0
   187                           ;CLASSB_RAMMARCHCStackTest.c: 78: {
   188                           ;CLASSB_RAMMARCHCStackTest.c: 79: STKPTR = (char)CLASSB_MarchIndex;
   189  003C64  C066 FFFC          	movff	102,stkptr	;volatile
   190                           
   191                           ; BSR set to: 0
   192                           ;CLASSB_RAMMARCHCStackTest.c: 80: *CLASSB_MarchbufferAddress = TOSL;
   193  003C68  C062 FFD9          	movff	98,fsr2l
   194  003C6C  C063 FFDA          	movff	99,fsr2h
   195  003C70  CFFD FFDF          	movff	tosl,indf2	;volatile
   196                           
   197                           ; BSR set to: 0
   198                           ;CLASSB_RAMMARCHCStackTest.c: 81: CLASSB_MarchbufferAddress++;
   199  003C74  4B62               	infsnz	98,f,b
   200  003C76  2B63               	incf	99,f,b
   201                           
   202                           ; BSR set to: 0
   203                           ;CLASSB_RAMMARCHCStackTest.c: 82: *CLASSB_MarchbufferAddress = TOSH;
   204  003C78  C062 FFD9          	movff	98,fsr2l
   205  003C7C  C063 FFDA          	movff	99,fsr2h
   206  003C80  CFFE FFDF          	movff	tosh,indf2	;volatile
   207                           
   208                           ;CLASSB_RAMMARCHCStackTest.c: 83: CLASSB_MarchbufferAddress++;
   209  003C84  4B62               	infsnz	98,f,b
   210  003C86  2B63               	incf	99,f,b
   211                           
   212                           ; BSR set to: 0
   213                           ;CLASSB_RAMMARCHCStackTest.c: 84: *CLASSB_MarchbufferAddress = TOSU;
   214  003C88  C062 FFD9          	movff	98,fsr2l
   215  003C8C  C063 FFDA          	movff	99,fsr2h
   216  003C90  CFFF FFDF          	movff	tosu,indf2	;volatile
   217                           
   218                           ; BSR set to: 0
   219                           ;CLASSB_RAMMARCHCStackTest.c: 85: CLASSB_MarchbufferAddress++;
   220  003C94  4B62               	infsnz	98,f,b
   221  003C96  2B63               	incf	99,f,b
   222                           
   223                           ; BSR set to: 0
   224  003C98  4B66               	infsnz	102,f,b
   225  003C9A  2B67               	incf	103,f,b
   226  003C9C  D7DE               	goto	l636
   227  003C9E                     l26:
   228                           
   229                           ; BSR set to: 0
   230                           ;CLASSB_RAMMARCHCStackTest.c: 86: }
   231                           ;CLASSB_RAMMARCHCStackTest.c: 94: STKPTR = 0;
   232  003C9E  6AFC               	clrf	stkptr,c	;volatile
   233  003CA0  6AFC               	clrf	stkptr,c	;# 
   234  003CA2                     Wr0:
   235                           
   236                           ;# 
   237  003CA2  2AFC               	incf	stkptr,f,c	;# 
   238  003CA4  6AFD               	clrf	tosl,c	;# 
   239  003CA6  6AFE               	clrf	tosh,c	;# 
   240  003CA8  6AFF               	clrf	tosu,c	;# 
   241  003CAA  50FC               	movf	stkptr,w,c	;# 
   242  003CAC  0A1F               	xorlw	31	;# 
   243  003CAE  E1F9               	bnz	Wr0	;# 
   244  003CB0  0E00               	movlw	0	;# 
   245  003CB2  6AFC               	clrf	stkptr,c	;# 
   246  003CB4                     Rd0Wr1ASC:
   247                           
   248                           ;# 
   249  003CB4  2AFC               	incf	stkptr,f,c	;# 
   250  003CB6  B0FD               	btfsc	tosl,0,c	;# 
   251  003CB8  EFDD  F01F         	goto	STACKFAIL	;# 
   252  003CBC  80FD               	bsf	tosl,0,c	;# 
   253  003CBE  B2FD               	btfsc	tosl,1,c	;# 
   254  003CC0  EFDD  F01F         	goto	STACKFAIL	;# 
   255  003CC4  82FD               	bsf	tosl,1,c	;# 
   256  003CC6  B4FD               	btfsc	tosl,2,c	;# 
   257  003CC8  EFDD  F01F         	goto	STACKFAIL	;# 
   258  003CCC  84FD               	bsf	tosl,2,c	;# 
   259  003CCE  B6FD               	btfsc	tosl,3,c	;# 
   260  003CD0  EFDD  F01F         	goto	STACKFAIL	;# 
   261  003CD4  86FD               	bsf	tosl,3,c	;# 
   262  003CD6  B8FD               	btfsc	tosl,4,c	;# 
   263  003CD8  EFDD  F01F         	goto	STACKFAIL	;# 
   264  003CDC  88FD               	bsf	tosl,4,c	;# 
   265  003CDE  BAFD               	btfsc	tosl,5,c	;# 
   266  003CE0  EFDD  F01F         	goto	STACKFAIL	;# 
   267  003CE4  8AFD               	bsf	tosl,5,c	;# 
   268  003CE6  BCFD               	btfsc	tosl,6,c	;# 
   269  003CE8  EFDD  F01F         	goto	STACKFAIL	;# 
   270  003CEC  8CFD               	bsf	tosl,6,c	;# 
   271  003CEE  BEFD               	btfsc	tosl,7,c	;# 
   272  003CF0  EFDD  F01F         	goto	STACKFAIL	;# 
   273  003CF4  8EFD               	bsf	tosl,7,c	;# 
   274  003CF6  B0FE               	btfsc	tosh,0,c	;# 
   275  003CF8  EFDD  F01F         	goto	STACKFAIL	;# 
   276  003CFC  80FE               	bsf	tosh,0,c	;# 
   277  003CFE  B2FE               	btfsc	tosh,1,c	;# 
   278  003D00  EFDD  F01F         	goto	STACKFAIL	;# 
   279  003D04  82FE               	bsf	tosh,1,c	;# 
   280  003D06  B4FE               	btfsc	tosh,2,c	;# 
   281  003D08  EFDD  F01F         	goto	STACKFAIL	;# 
   282  003D0C  84FE               	bsf	tosh,2,c	;# 
   283  003D0E  B6FE               	btfsc	tosh,3,c	;# 
   284  003D10  EFDD  F01F         	goto	STACKFAIL	;# 
   285  003D14  86FE               	bsf	tosh,3,c	;# 
   286  003D16  B8FE               	btfsc	tosh,4,c	;# 
   287  003D18  EFDD  F01F         	goto	STACKFAIL	;# 
   288  003D1C  88FE               	bsf	tosh,4,c	;# 
   289  003D1E  BAFE               	btfsc	tosh,5,c	;# 
   290  003D20  EFDD  F01F         	goto	STACKFAIL	;# 
   291  003D24  8AFE               	bsf	tosh,5,c	;# 
   292  003D26  BCFE               	btfsc	tosh,6,c	;# 
   293  003D28  EFDD  F01F         	goto	STACKFAIL	;# 
   294  003D2C  8CFE               	bsf	tosh,6,c	;# 
   295  003D2E  BEFE               	btfsc	tosh,7,c	;# 
   296  003D30  EFDD  F01F         	goto	STACKFAIL	;# 
   297  003D34  8EFE               	bsf	tosh,7,c	;# 
   298  003D36  B0FF               	btfsc	tosu,0,c	;# 
   299  003D38  EFDD  F01F         	goto	STACKFAIL	;# 
   300  003D3C  80FF               	bsf	tosu,0,c	;# 
   301  003D3E  B2FF               	btfsc	tosu,1,c	;# 
   302  003D40  EFDD  F01F         	goto	STACKFAIL	;# 
   303  003D44  82FF               	bsf	tosu,1,c	;# 
   304  003D46  B4FF               	btfsc	tosu,2,c	;# 
   305  003D48  EFDD  F01F         	goto	STACKFAIL	;# 
   306  003D4C  84FF               	bsf	tosu,2,c	;# 
   307  003D4E  B6FF               	btfsc	tosu,3,c	;# 
   308  003D50  EFDD  F01F         	goto	STACKFAIL	;# 
   309  003D54  86FF               	bsf	tosu,3,c	;# 
   310  003D56  B8FF               	btfsc	tosu,4,c	;# 
   311  003D58  EFDD  F01F         	goto	STACKFAIL	;# 
   312  003D5C  88FF               	bsf	tosu,4,c	;# 
   313  003D5E  50FC               	movf	stkptr,w,c	;# 
   314  003D60  0A1F               	xorlw	31	;# 
   315  003D62  E1A8               	bnz	Rd0Wr1ASC	;# 
   316  003D64  0E00               	movlw	0	;# 
   317  003D66  6AFC               	clrf	stkptr,c	;# 
   318  003D68                     Rd1Wr0ASC:
   319                           
   320                           ;# 
   321  003D68  2AFC               	incf	stkptr,f,c	;# 
   322  003D6A  A0FD               	btfss	tosl,0,c	;# 
   323  003D6C  EFDD  F01F         	goto	STACKFAIL	;# 
   324  003D70  90FD               	bcf	tosl,0,c	;# 
   325  003D72  A2FD               	btfss	tosl,1,c	;# 
   326  003D74  EFDD  F01F         	goto	STACKFAIL	;# 
   327  003D78  92FD               	bcf	tosl,1,c	;# 
   328  003D7A  A4FD               	btfss	tosl,2,c	;# 
   329  003D7C  EFDD  F01F         	goto	STACKFAIL	;# 
   330  003D80  94FD               	bcf	tosl,2,c	;# 
   331  003D82  A6FD               	btfss	tosl,3,c	;# 
   332  003D84  EFDD  F01F         	goto	STACKFAIL	;# 
   333  003D88  96FD               	bcf	tosl,3,c	;# 
   334  003D8A  A8FD               	btfss	tosl,4,c	;# 
   335  003D8C  EFDD  F01F         	goto	STACKFAIL	;# 
   336  003D90  98FD               	bcf	tosl,4,c	;# 
   337  003D92  AAFD               	btfss	tosl,5,c	;# 
   338  003D94  EFDD  F01F         	goto	STACKFAIL	;# 
   339  003D98  9AFD               	bcf	tosl,5,c	;# 
   340  003D9A  ACFD               	btfss	tosl,6,c	;# 
   341  003D9C  EFDD  F01F         	goto	STACKFAIL	;# 
   342  003DA0  9CFD               	bcf	tosl,6,c	;# 
   343  003DA2  AEFD               	btfss	tosl,7,c	;# 
   344  003DA4  EFDD  F01F         	goto	STACKFAIL	;# 
   345  003DA8  9EFD               	bcf	tosl,7,c	;# 
   346  003DAA  A0FE               	btfss	tosh,0,c	;# 
   347  003DAC  EFDD  F01F         	goto	STACKFAIL	;# 
   348  003DB0  90FE               	bcf	tosh,0,c	;# 
   349  003DB2  A2FE               	btfss	tosh,1,c	;# 
   350  003DB4  EFDD  F01F         	goto	STACKFAIL	;# 
   351  003DB8  92FE               	bcf	tosh,1,c	;# 
   352  003DBA  A4FE               	btfss	tosh,2,c	;# 
   353  003DBC  EFDD  F01F         	goto	STACKFAIL	;# 
   354  003DC0  94FE               	bcf	tosh,2,c	;# 
   355  003DC2  A6FE               	btfss	tosh,3,c	;# 
   356  003DC4  EFDD  F01F         	goto	STACKFAIL	;# 
   357  003DC8  96FE               	bcf	tosh,3,c	;# 
   358  003DCA  A8FE               	btfss	tosh,4,c	;# 
   359  003DCC  EFDD  F01F         	goto	STACKFAIL	;# 
   360  003DD0  98FE               	bcf	tosh,4,c	;# 
   361  003DD2  AAFE               	btfss	tosh,5,c	;# 
   362  003DD4  EFDD  F01F         	goto	STACKFAIL	;# 
   363  003DD8  9AFE               	bcf	tosh,5,c	;# 
   364  003DDA  ACFE               	btfss	tosh,6,c	;# 
   365  003DDC  EFDD  F01F         	goto	STACKFAIL	;# 
   366  003DE0  9CFE               	bcf	tosh,6,c	;# 
   367  003DE2  AEFE               	btfss	tosh,7,c	;# 
   368  003DE4  EFDD  F01F         	goto	STACKFAIL	;# 
   369  003DE8  9EFE               	bcf	tosh,7,c	;# 
   370  003DEA  A0FF               	btfss	tosu,0,c	;# 
   371  003DEC  EFDD  F01F         	goto	STACKFAIL	;# 
   372  003DF0  90FF               	bcf	tosu,0,c	;# 
   373  003DF2  A2FF               	btfss	tosu,1,c	;# 
   374  003DF4  EFDD  F01F         	goto	STACKFAIL	;# 
   375  003DF8  92FF               	bcf	tosu,1,c	;# 
   376  003DFA  A4FF               	btfss	tosu,2,c	;# 
   377  003DFC  EFDD  F01F         	goto	STACKFAIL	;# 
   378  003E00  94FF               	bcf	tosu,2,c	;# 
   379  003E02  A6FF               	btfss	tosu,3,c	;# 
   380  003E04  EFDD  F01F         	goto	STACKFAIL	;# 
   381  003E08  96FF               	bcf	tosu,3,c	;# 
   382  003E0A  A8FF               	btfss	tosu,4,c	;# 
   383  003E0C  EFDD  F01F         	goto	STACKFAIL	;# 
   384  003E10  98FF               	bcf	tosu,4,c	;# 
   385  003E12  50FC               	movf	stkptr,w,c	;# 
   386  003E14  0A1F               	xorlw	31	;# 
   387  003E16  E1A8               	bnz	Rd1Wr0ASC	;# 
   388  003E18  6AFC               	clrf	stkptr,c	;# 
   389  003E1A                     Rd0NMINUS:
   390                           
   391                           ;# 
   392  003E1A  2AFC               	incf	stkptr,f,c	;# 
   393  003E1C  0E00               	movlw	0	;# 
   394  003E1E  1AFD               	xorwf	tosl,f,c	;# 
   395  003E20  E001 D0CB          	bnz	STACKFAIL	;# 
   396  003E24  1AFE               	xorwf	tosh,f,c	;# 
   397  003E26  E001 D0C8          	bnz	STACKFAIL	;# 
   398  003E2A  1AFF               	xorwf	tosu,f,c	;# 
   399  003E2C  E001 D0C5          	bnz	STACKFAIL	;# 
   400  003E30  50FC               	movf	stkptr,w,c	;# 
   401  003E32  0A1F               	xorlw	31	;# 
   402  003E34  E1F2               	bnz	Rd0NMINUS	;# 
   403  003E36  0E20               	movlw	32	;# 
   404  003E38  6EFC               	movwf	stkptr,c	;# 
   405  003E3A                     Rd0Wr1DES:
   406                           
   407                           ;# 
   408  003E3A  06FC               	decf	stkptr,f,c	;# 
   409  003E3C  B8FF               	btfsc	tosu,4,c	;# 
   410  003E3E  EFDD  F01F         	goto	STACKFAIL	;# 
   411  003E42  88FF               	bsf	tosu,4,c	;# 
   412  003E44  B6FF               	btfsc	tosu,3,c	;# 
   413  003E46  EFDD  F01F         	goto	STACKFAIL	;# 
   414  003E4A  86FF               	bsf	tosu,3,c	;# 
   415  003E4C  B4FF               	btfsc	tosu,2,c	;# 
   416  003E4E  EFDD  F01F         	goto	STACKFAIL	;# 
   417  003E52  84FF               	bsf	tosu,2,c	;# 
   418  003E54  B2FF               	btfsc	tosu,1,c	;# 
   419  003E56  EFDD  F01F         	goto	STACKFAIL	;# 
   420  003E5A  82FF               	bsf	tosu,1,c	;# 
   421  003E5C  B0FF               	btfsc	tosu,0,c	;# 
   422  003E5E  EFDD  F01F         	goto	STACKFAIL	;# 
   423  003E62  80FF               	bsf	tosu,0,c	;# 
   424  003E64  BEFE               	btfsc	tosh,7,c	;# 
   425  003E66  EFDD  F01F         	goto	STACKFAIL	;# 
   426  003E6A  8EFE               	bsf	tosh,7,c	;# 
   427  003E6C  BCFE               	btfsc	tosh,6,c	;# 
   428  003E6E  EFDD  F01F         	goto	STACKFAIL	;# 
   429  003E72  8CFE               	bsf	tosh,6,c	;# 
   430  003E74  BAFE               	btfsc	tosh,5,c	;# 
   431  003E76  EFDD  F01F         	goto	STACKFAIL	;# 
   432  003E7A  8AFE               	bsf	tosh,5,c	;# 
   433  003E7C  B8FE               	btfsc	tosh,4,c	;# 
   434  003E7E  EFDD  F01F         	goto	STACKFAIL	;# 
   435  003E82  88FE               	bsf	tosh,4,c	;# 
   436  003E84  B6FE               	btfsc	tosh,3,c	;# 
   437  003E86  EFDD  F01F         	goto	STACKFAIL	;# 
   438  003E8A  86FE               	bsf	tosh,3,c	;# 
   439  003E8C  B4FE               	btfsc	tosh,2,c	;# 
   440  003E8E  EFDD  F01F         	goto	STACKFAIL	;# 
   441  003E92  84FE               	bsf	tosh,2,c	;# 
   442  003E94  B2FE               	btfsc	tosh,1,c	;# 
   443  003E96  EFDD  F01F         	goto	STACKFAIL	;# 
   444  003E9A  82FE               	bsf	tosh,1,c	;# 
   445  003E9C  B0FE               	btfsc	tosh,0,c	;# 
   446  003E9E  EFDD  F01F         	goto	STACKFAIL	;# 
   447  003EA2  80FE               	bsf	tosh,0,c	;# 
   448  003EA4  BEFD               	btfsc	tosl,7,c	;# 
   449  003EA6  EFDD  F01F         	goto	STACKFAIL	;# 
   450  003EAA  8EFD               	bsf	tosl,7,c	;# 
   451  003EAC  BCFD               	btfsc	tosl,6,c	;# 
   452  003EAE  EFDD  F01F         	goto	STACKFAIL	;# 
   453  003EB2  8CFD               	bsf	tosl,6,c	;# 
   454  003EB4  BAFD               	btfsc	tosl,5,c	;# 
   455  003EB6  EFDD  F01F         	goto	STACKFAIL	;# 
   456  003EBA  8AFD               	bsf	tosl,5,c	;# 
   457  003EBC  B8FD               	btfsc	tosl,4,c	;# 
   458  003EBE  EFDD  F01F         	goto	STACKFAIL	;# 
   459  003EC2  88FD               	bsf	tosl,4,c	;# 
   460  003EC4  B6FD               	btfsc	tosl,3,c	;# 
   461  003EC6  EFDD  F01F         	goto	STACKFAIL	;# 
   462  003ECA  86FD               	bsf	tosl,3,c	;# 
   463  003ECC  B4FD               	btfsc	tosl,2,c	;# 
   464  003ECE  EFDD  F01F         	goto	STACKFAIL	;# 
   465  003ED2  84FD               	bsf	tosl,2,c	;# 
   466  003ED4  B2FD               	btfsc	tosl,1,c	;# 
   467  003ED6  EFDD  F01F         	goto	STACKFAIL	;# 
   468  003EDA  82FD               	bsf	tosl,1,c	;# 
   469  003EDC  B0FD               	btfsc	tosl,0,c	;# 
   470  003EDE  EFDD  F01F         	goto	STACKFAIL	;# 
   471  003EE2  80FD               	bsf	tosl,0,c	;# 
   472  003EE4  50FC               	movf	stkptr,w,c	;# 
   473  003EE6  0A01               	xorlw	1	;# 
   474  003EE8  E1A8               	bnz	Rd0Wr1DES	;# 
   475  003EEA  0E20               	movlw	32	;# 
   476  003EEC  6EFC               	movwf	stkptr,c	;# 
   477  003EEE                     Rd1Wr0DES:
   478                           
   479                           ;# 
   480  003EEE  06FC               	decf	stkptr,f,c	;# 
   481  003EF0  A8FF               	btfss	tosu,4,c	;# 
   482  003EF2  EFDD  F01F         	goto	STACKFAIL	;# 
   483  003EF6  98FF               	bcf	tosu,4,c	;# 
   484  003EF8  A6FF               	btfss	tosu,3,c	;# 
   485  003EFA  EFDD  F01F         	goto	STACKFAIL	;# 
   486  003EFE  96FF               	bcf	tosu,3,c	;# 
   487  003F00  A4FF               	btfss	tosu,2,c	;# 
   488  003F02  EFDD  F01F         	goto	STACKFAIL	;# 
   489  003F06  94FF               	bcf	tosu,2,c	;# 
   490  003F08  A2FF               	btfss	tosu,1,c	;# 
   491  003F0A  EFDD  F01F         	goto	STACKFAIL	;# 
   492  003F0E  92FF               	bcf	tosu,1,c	;# 
   493  003F10  A0FF               	btfss	tosu,0,c	;# 
   494  003F12  EFDD  F01F         	goto	STACKFAIL	;# 
   495  003F16  90FF               	bcf	tosu,0,c	;# 
   496  003F18  AEFE               	btfss	tosh,7,c	;# 
   497  003F1A  EFDD  F01F         	goto	STACKFAIL	;# 
   498  003F1E  9EFE               	bcf	tosh,7,c	;# 
   499  003F20  ACFE               	btfss	tosh,6,c	;# 
   500  003F22  EFDD  F01F         	goto	STACKFAIL	;# 
   501  003F26  9CFE               	bcf	tosh,6,c	;# 
   502  003F28  AAFE               	btfss	tosh,5,c	;# 
   503  003F2A  EFDD  F01F         	goto	STACKFAIL	;# 
   504  003F2E  9AFE               	bcf	tosh,5,c	;# 
   505  003F30  A8FE               	btfss	tosh,4,c	;# 
   506  003F32  EFDD  F01F         	goto	STACKFAIL	;# 
   507  003F36  98FE               	bcf	tosh,4,c	;# 
   508  003F38  A6FE               	btfss	tosh,3,c	;# 
   509  003F3A  EFDD  F01F         	goto	STACKFAIL	;# 
   510  003F3E  96FE               	bcf	tosh,3,c	;# 
   511  003F40  A4FE               	btfss	tosh,2,c	;# 
   512  003F42  EFDD  F01F         	goto	STACKFAIL	;# 
   513  003F46  94FE               	bcf	tosh,2,c	;# 
   514  003F48  A2FE               	btfss	tosh,1,c	;# 
   515  003F4A  EFDD  F01F         	goto	STACKFAIL	;# 
   516  003F4E  92FE               	bcf	tosh,1,c	;# 
   517  003F50  A0FE               	btfss	tosh,0,c	;# 
   518  003F52  EFDD  F01F         	goto	STACKFAIL	;# 
   519  003F56  90FE               	bcf	tosh,0,c	;# 
   520  003F58  AEFD               	btfss	tosl,7,c	;# 
   521  003F5A  EFDD  F01F         	goto	STACKFAIL	;# 
   522  003F5E  9EFD               	bcf	tosl,7,c	;# 
   523  003F60  ACFD               	btfss	tosl,6,c	;# 
   524  003F62  EFDD  F01F         	goto	STACKFAIL	;# 
   525  003F66  9CFD               	bcf	tosl,6,c	;# 
   526  003F68  AAFD               	btfss	tosl,5,c	;# 
   527  003F6A  EFDD  F01F         	goto	STACKFAIL	;# 
   528  003F6E  9AFD               	bcf	tosl,5,c	;# 
   529  003F70  A8FD               	btfss	tosl,4,c	;# 
   530  003F72  EFDD  F01F         	goto	STACKFAIL	;# 
   531  003F76  98FD               	bcf	tosl,4,c	;# 
   532  003F78  A6FD               	btfss	tosl,3,c	;# 
   533  003F7A  EFDD  F01F         	goto	STACKFAIL	;# 
   534  003F7E  96FD               	bcf	tosl,3,c	;# 
   535  003F80  A4FD               	btfss	tosl,2,c	;# 
   536  003F82  EFDD  F01F         	goto	STACKFAIL	;# 
   537  003F86  94FD               	bcf	tosl,2,c	;# 
   538  003F88  A2FD               	btfss	tosl,1,c	;# 
   539  003F8A  EFDD  F01F         	goto	STACKFAIL	;# 
   540  003F8E  92FD               	bcf	tosl,1,c	;# 
   541  003F90  A0FD               	btfss	tosl,0,c	;# 
   542  003F92  EFDD  F01F         	goto	STACKFAIL	;# 
   543  003F96  90FD               	bcf	tosl,0,c	;# 
   544  003F98  50FC               	movf	stkptr,w,c	;# 
   545  003F9A  0A01               	xorlw	1	;# 
   546  003F9C  E1A8               	bnz	Rd1Wr0DES	;# 
   547  003F9E  6AFC               	clrf	stkptr,c	;# 
   548  003FA0                     Rd0ASC:
   549                           
   550                           ;# 
   551  003FA0  2AFC               	incf	stkptr,f,c	;# 
   552  003FA2  0E00               	movlw	0	;# 
   553  003FA4  1AFD               	xorwf	tosl,f,c	;# 
   554  003FA6  E109               	bnz	STACKFAIL	;# 
   555  003FA8  1AFE               	xorwf	tosh,f,c	;# 
   556  003FAA  E107               	bnz	STACKFAIL	;# 
   557  003FAC  1AFF               	xorwf	tosu,f,c	;# 
   558  003FAE  E105               	bnz	STACKFAIL	;# 
   559  003FB0  50FC               	movf	stkptr,w,c	;# 
   560  003FB2  0A1F               	xorlw	31	;# 
   561  003FB4  E1F5               	bnz	Rd0ASC	;# 
   562  003FB6  EFDF  F01F         	goto	STACKEND	;# 
   563  003FBA                     STACKFAIL:
   564                           
   565                           ;# 
   566  003FBA  0100               	banksel	_stackTestResult	;# 
   567  003FBC  6901               	setf	_stackTestResult& (0+255),b	;# 
   568  003FBE                     STACKEND:
   569                           
   570                           ;# 
   571  003FBE  F000               	nop		;# 
   572                           
   573                           ;CLASSB_RAMMARCHCStackTest.c: 495: CLASSB_MarchbufferAddress = CLASSB_MARCHtempAddress;
   574  003FC0  C064 F062          	movff	100,98
   575  003FC4  C065 F063          	movff	101,99
   576                           
   577                           ;CLASSB_RAMMARCHCStackTest.c: 496: CLASSB_MarchbufferAddress++;
   578  003FC8  0100               	movlb	0	; () banked
   579  003FCA  4B62               	infsnz	98,f,b
   580  003FCC  2B63               	incf	99,f,b
   581                           
   582                           ; BSR set to: 0
   583                           ;CLASSB_RAMMARCHCStackTest.c: 498: FSR0 = CLASSB_MarchbufferAddress;
   584  003FCE  C062 FFE9          	movff	98,fsr0l	;volatile
   585  003FD2  C063 FFEA          	movff	99,fsr0h	;volatile
   586                           
   587                           ; BSR set to: 0
   588                           ;CLASSB_RAMMARCHCStackTest.c: 499: STKPTR = 0x00;
   589  003FD6  6AFC               	clrf	stkptr,c	;volatile
   590  003FD8                     RestoreStack:
   591                           
   592                           ;# 
   593  003FD8  2AFC               	incf	stkptr,f,c	;# 
   594  003FDA  50EE               	movf	postinc0,w,c	;# 
   595  003FDC  6EFD               	movwf	tosl,c	;# 
   596  003FDE  50EE               	movf	postinc0,w,c	;# 
   597  003FE0  6EFE               	movwf	tosh,c	;# 
   598  003FE2  50EE               	movf	postinc0,w,c	;# 
   599  003FE4  6EFF               	movwf	tosu,c	;# 
   600  003FE6  0E1F               	movlw	31	;# 
   601  003FE8  18FC               	xorwf	stkptr,w,c	;# 
   602  003FEA  E1F6               	bnz	RestoreStack	;# 
   603                           
   604                           ;CLASSB_RAMMARCHCStackTest.c: 518: STKPTR = *CLASSB_MARCHtempAddress;
   605  003FEC  C064 FFD9          	movff	100,fsr2l
   606  003FF0  C065 FFDA          	movff	101,fsr2h
   607  003FF4  50DF               	movf	indf2,w,c
   608  003FF6  6EFC               	movwf	stkptr,c	;volatile
   609                           
   610                           ;CLASSB_RAMMARCHCStackTest.c: 520: if (stackTestResult == 0xFF)
   611  003FF8  2801               	incf	_stackTestResult,w,c
   612  003FFA  E101               	bnz	l670
   613                           
   614                           ;CLASSB_RAMMARCHCStackTest.c: 521: {
   615                           ;CLASSB_RAMMARCHCStackTest.c: 522: return CLASSB_TEST_FAIL;
   616  003FFC  0C01               	retlw	1
   617  003FFE                     l670:
   618                           
   619                           ;CLASSB_RAMMARCHCStackTest.c: 524: else
   620                           ;CLASSB_RAMMARCHCStackTest.c: 525: {
   621                           ;CLASSB_RAMMARCHCStackTest.c: 526: return CLASSB_TEST_PASS;
   622  003FFE  0C00               	retlw	0
   623  004000                     __end_of_CLASSB_RAMMarchCStackTest:
   624                           	opt stack 0
   625  0000                     tosu	equ	0xFFF
   626                           tosh	equ	0xFFE
   627                           tosl	equ	0xFFD
   628                           stkptr	equ	0xFFC
   629                           postinc0	equ	0xFEE
   630                           fsr0h	equ	0xFEA
   631                           fsr0l	equ	0xFE9
   632                           indf2	equ	0xFDF
   633                           fsr2h	equ	0xFDA
   634                           fsr2l	equ	0xFD9
   635                           tosu	equ	0xFFF
   636                           tosh	equ	0xFFE
   637                           tosl	equ	0xFFD
   638                           stkptr	equ	0xFFC
   639                           postinc0	equ	0xFEE
   640                           fsr0h	equ	0xFEA
   641                           fsr0l	equ	0xFE9
   642                           indf2	equ	0xFDF
   643                           fsr2h	equ	0xFDA
   644                           fsr2l	equ	0xFD9
   645                           
   646                           	psect	text2
   647  000000                     __ptext2:
   648                           	opt stack 0
   649                           tosu	equ	0xFFF
   650                           tosh	equ	0xFFE
   651                           tosl	equ	0xFFD
   652                           stkptr	equ	0xFFC
   653                           postinc0	equ	0xFEE
   654                           fsr0h	equ	0xFEA
   655                           fsr0l	equ	0xFE9
   656                           indf2	equ	0xFDF
   657                           fsr2h	equ	0xFDA
   658                           fsr2l	equ	0xFD9
   659                           
   660                           	psect	rparam
   661  0000                     tosu	equ	0xFFF
   662                           tosh	equ	0xFFE
   663                           tosl	equ	0xFFD
   664                           stkptr	equ	0xFFC
   665                           postinc0	equ	0xFEE
   666                           fsr0h	equ	0xFEA
   667                           fsr0l	equ	0xFE9
   668                           indf2	equ	0xFDF
   669                           fsr2h	equ	0xFDA
   670                           fsr2l	equ	0xFD9


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      1       2
    BANK0           150      0       0
    BANK1           256      0       0

Pointer List with Targets:

    CLASSB_MarchbufferAddress	PTR unsigned char  size(2) Largest target is 511
		 -> RAM(DATA[511]), 

    CLASSB_MARCHtempAddress	PTR unsigned char  size(2) Largest target is 511
		 -> RAM(DATA[511]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              0 COMRAM     1     1      0
          _CLASSB_RAMMarchCStackTest
 ---------------------------------------------------------------------------------
 (1) _CLASSB_RAMMarchCStackTest                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CLASSB_RAMMarchCStackTest

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            196      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            96      0       0       3        0.0%
BANK0               96      0       0       4        0.0%
BIGRAMl             5F      0       0       9        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      1       2       1        2.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       1       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       2       7        0.0%
DATA                 0      0       3      10        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.12 build 49521 
Symbol Table                                                                                   Tue Jun 03 10:38:36 2014

                                l26 3C9E                                  l36 3C38  
                                l38 3C3A                                  Wr0 3CA2  
                      __CFG_CP0$OFF 000000                        __CFG_CP1$OFF 000000  
                               TOSH 000FFE                                 TOSL 000FFD  
                               l636 3C5A                                 l670 3FFE  
                               TOSU 000FFF                        __CFG_CPB$OFF 000000  
                      __CFG_CPD$OFF 000000                        __CFG_BORV$19 000000  
                      __CFG_LVP$OFF 000000            _CLASSB_MarchstartAddress 000060  
                              _FSR0 000FE9                                _TOSH 000FFE  
                              _TOSL 000FFD                                _TOSU 000FFF  
                              _main 3C24                                fsr2h 000FDA  
                              indf2 000FDF                                fsr2l 000FD9  
                              start 0000                       __CFG_IESO$OFF 000000  
                     __CFG_FOSC$IRC 000000                       __CFG_MCLRE$ON 000000  
                             Rd0ASC 3FA0                               STATUS 000FD8  
                             ?_main 0002                               STKPTR 000FFC  
                    __CFG_BBSIZ$OFF 000000                       __CFG_WRT0$OFF 000000  
                     __CFG_WRT1$OFF 000000                      __CFG_EBTR0$OFF 000000  
                    __CFG_FCMEN$OFF 000000                      __CFG_EBTR1$OFF 000000  
                     __CFG_WRTB$OFF 000000                       __CFG_WRTC$OFF 000000  
                     __CFG_WRTD$OFF 000000                      __CFG_EBTRB$OFF 000000  
                             status 000FD8                      __CFG_HFOFST$ON 000000  
                   __initialization 3C1C                        __end_of_main 3C3C  
                    __CFG_PCLKEN$ON 000000                              ??_main 0002  
                     __activetblptr 000000                      __CFG_PLLEN$OFF 000000  
                    __CFG_WDTEN$OFF 000000                              _STKPTR 000FFC  
                    __CFG_XINST$OFF 000000                          __accesstop 0060  
           __end_of__initialization 3C1E                      __pcstackCOMRAM 0002  
                           STACKEND 3FBE                             POSTINC0 000FEE  
                   __CFG_PWRTEN$OFF 000000                             __Hparam 0000  
                           __Lparam 0000                         RestoreStack 3FD8  
                 _CLASSB_MarchIndex 000066                     __CFG_STVREN$OFF 000000  
                           __pcinit 3C1C                             __ramtop 0200  
                           __ptext0 3C24                             __ptext1 3C3C  
                           __ptext2 0000                end_of_initialization 3C1E  
                    main@testResult 0002           _CLASSB_MarchbufferAddress 000062  
__size_of_CLASSB_RAMMarchCStackTest 03C4                 start_initialization 3C1C  
        ?_CLASSB_RAMMarchCStackTest 0002                         __pbssCOMRAM 0001  
 __end_of_CLASSB_RAMMarchCStackTest 4000                     _stackTestResult 0001  
                          STACKFAIL 3FBA             _CLASSB_MARCHtempAddress 000064  
                          Rd0NMINUS 3E1A                            Rd0Wr1DES 3E3A  
                          Rd0Wr1ASC 3CB4                            Rd1Wr0DES 3EEE  
                          Rd1Wr0ASC 3D68                    __CFG_WDTPS$32768 000000  
                          __Hrparam 0000                            __Lrparam 0000  
                __CFG_BOREN$SBORDIS 000000                  _CLASSB_MarchLength 000068  
       ??_CLASSB_RAMMarchCStackTest 0002                       __size_of_main 0018  
         _CLASSB_RAMMarchCStackTest 3C3C  
